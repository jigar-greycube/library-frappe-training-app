{
  "version": 3,
  "sources": ["../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Core/Utils/Constants.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Enums/Directions/MoveDirection.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Utils/TypeUtils.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Core/Utils/Vectors.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Utils/NumberUtils.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Enums/Modes/AnimationMode.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Enums/AnimationStatus.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Enums/Types/DestroyType.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Enums/Directions/OutModeDirection.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Enums/Modes/PixelMode.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Enums/Types/StartValueType.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Utils/Utils.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Enums/Types/AlterType.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Utils/ColorUtils.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Utils/CanvasUtils.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Core/Canvas.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Enums/InteractivityDetect.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Core/Utils/EventListeners.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Enums/Types/EventType.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/OptionsColor.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/Background/Background.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/BackgroundMask/BackgroundMaskCover.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/BackgroundMask/BackgroundMask.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/FullScreen/FullScreen.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/ClickEvent.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Enums/Types/DivType.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/DivEvent.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/Parallax.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/HoverEvent.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/ResizeEvent.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/Events.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Modes/Modes.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Interactivity.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/ManualParticle.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Enums/Modes/ResponsiveMode.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/Responsive.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Enums/Modes/ThemeMode.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/Theme/ThemeDefault.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/Theme/Theme.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/AnimationOptions.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/ColorAnimation.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/HslAnimation.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/AnimatableColor.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Enums/Modes/CollisionMode.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Collisions/CollisionsAbsorb.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Collisions/CollisionsOverlap.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/ValueWithRandom.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Bounce/ParticlesBounce.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Collisions/Collisions.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Effect/Effect.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveAngle.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveAttract.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveCenter.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveGravity.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/Path/MovePath.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveTrailFill.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveTrail.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Enums/Modes/OutMode.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/OutModes.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/Spin.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/Move.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Opacity/OpacityAnimation.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Opacity/Opacity.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesDensity.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Enums/Modes/LimitMode.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesNumberLimit.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesNumber.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Shadow.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Shape/Shape.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Size/SizeAnimation.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Size/Size.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Stroke.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/Particles/ZIndex/ZIndex.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/Particles/ParticlesOptions.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Utils/OptionsUtils.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Options/Classes/Options.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Enums/Types/InteractorType.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Core/Utils/InteractionManager.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Enums/Types/ParticleOutType.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Core/Particle.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Core/Utils/Point.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Types/RangeType.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Core/Utils/Ranges.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Core/Utils/QuadTree.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Core/Particles.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Core/Retina.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Core/Container.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Utils/EventDispatcher.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Core/Engine.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/init.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Enums/Directions/RotateDirection.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Enums/Types/GradientType.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/Enums/Types/EasingType.js", "../../../../../apps/library_management/node_modules/@tsparticles/engine/browser/index.js", "../../../../../apps/library_management/node_modules/@tsparticles/shape-star/browser/Utils.js", "../../../../../apps/library_management/node_modules/@tsparticles/shape-star/browser/StarDrawer.js", "../../../../../apps/library_management/node_modules/@tsparticles/shape-star/browser/index.js", "../../../../../apps/library_management/library_management/public/js/library_tsparticles.bundle.js"],
  "sourcesContent": ["export const generatedAttribute = \"generated\", mouseDownEvent = \"pointerdown\", mouseUpEvent = \"pointerup\", mouseLeaveEvent = \"pointerleave\", mouseOutEvent = \"pointerout\", mouseMoveEvent = \"pointermove\", touchStartEvent = \"touchstart\", touchEndEvent = \"touchend\", touchMoveEvent = \"touchmove\", touchCancelEvent = \"touchcancel\", resizeEvent = \"resize\", visibilityChangeEvent = \"visibilitychange\", errorPrefix = \"tsParticles - Error\", percentDenominator = 100, half = 0.5, millisecondsToSeconds = 1000, originPoint = {\n    x: 0,\n    y: 0,\n    z: 0,\n}, defaultTransform = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n}, randomColorValue = \"random\", midColorValue = \"mid\", double = 2, doublePI = Math.PI * double, defaultFps = 60, defaultAlpha = 1, generatedTrue = \"true\", generatedFalse = \"false\", canvasTag = \"canvas\", defaultRetryCount = 0, squareExp = 2, qTreeCapacity = 4, defaultRemoveQuantity = 1, defaultRatio = 1, defaultReduceFactor = 1, subdivideCount = 4, inverseFactorNumerator = 1.0, rgbMax = 255, hMax = 360, sMax = 100, lMax = 100, hMin = 0, sMin = 0, hPhase = 60, empty = 0, quarter = 0.25, threeQuarter = half + quarter, minVelocity = 0, defaultTransformValue = 1, minimumSize = 0, minimumLength = 0, zIndexFactorOffset = 1, defaultOpacity = 1, clickRadius = 1, touchEndLengthOffset = 1, minCoordinate = 0, removeDeleteCount = 1, removeMinIndex = 0, defaultFpsLimit = 120, minFpsLimit = 0, canvasFirstIndex = 0, loadRandomFactor = 10000, loadMinIndex = 0, one = 1, none = 0, decayOffset = 1, tryCountIncrement = 1, minRetries = 0, rollFactor = 1, minZ = 0, defaultRadius = 0, posOffset = -quarter, sizeFactor = 1.5, minLimit = 0, countOffset = 1, minCount = 0, minIndex = 0, manualCount = 0, lengthOffset = 1, defaultDensityFactor = 1, deleteCount = 1, touchDelay = 500, manualDefaultPosition = 50, defaultAngle = 0, identity = 1, minStrokeWidth = 0, lFactor = 1, lMin = 0, rgbFactor = 255, triple = 3, sextuple = 6, sNormalizedOffset = 1, phaseNumerator = 1, defaultRgbMin = 0, defaultVelocity = 0, defaultLoops = 0, defaultTime = 0;\n", "export var MoveDirection;\n(function (MoveDirection) {\n    MoveDirection[\"bottom\"] = \"bottom\";\n    MoveDirection[\"bottomLeft\"] = \"bottom-left\";\n    MoveDirection[\"bottomRight\"] = \"bottom-right\";\n    MoveDirection[\"left\"] = \"left\";\n    MoveDirection[\"none\"] = \"none\";\n    MoveDirection[\"right\"] = \"right\";\n    MoveDirection[\"top\"] = \"top\";\n    MoveDirection[\"topLeft\"] = \"top-left\";\n    MoveDirection[\"topRight\"] = \"top-right\";\n    MoveDirection[\"outside\"] = \"outside\";\n    MoveDirection[\"inside\"] = \"inside\";\n})(MoveDirection || (MoveDirection = {}));\n", "export function isBoolean(arg) {\n    return typeof arg === \"boolean\";\n}\nexport function isString(arg) {\n    return typeof arg === \"string\";\n}\nexport function isNumber(arg) {\n    return typeof arg === \"number\";\n}\nexport function isFunction(arg) {\n    return typeof arg === \"function\";\n}\nexport function isObject(arg) {\n    return typeof arg === \"object\" && arg !== null;\n}\nexport function isArray(arg) {\n    return Array.isArray(arg);\n}\nexport function isNull(arg) {\n    return arg === null || arg === undefined;\n}\n", "import { errorPrefix, inverseFactorNumerator, none, originPoint, squareExp } from \"./Constants.js\";\nimport { isNumber } from \"../../Utils/TypeUtils.js\";\nexport class Vector3d {\n    constructor(xOrCoords, y, z) {\n        this._updateFromAngle = (angle, length) => {\n            this.x = Math.cos(angle) * length;\n            this.y = Math.sin(angle) * length;\n        };\n        if (!isNumber(xOrCoords) && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : originPoint.z;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z ?? originPoint.z;\n        }\n        else {\n            throw new Error(`${errorPrefix} Vector3d not initialized correctly`);\n        }\n    }\n    static get origin() {\n        return Vector3d.create(originPoint.x, originPoint.y, originPoint.z);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this._updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this._updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** squareExp + this.y ** squareExp;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    normalize() {\n        const length = this.length;\n        if (length != none) {\n            this.multTo(inverseFactorNumerator / length);\n        }\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), originPoint.z);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : originPoint.z;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n}\nexport class Vector extends Vector3d {\n    constructor(xOrCoords, y) {\n        super(xOrCoords, y, originPoint.z);\n    }\n    static get origin() {\n        return Vector.create(originPoint.x, originPoint.y);\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n}\n", "import { MoveDirection } from \"../Enums/Directions/MoveDirection.js\";\nimport { double, doublePI, empty, half, percentDenominator, quarter, threeQuarter } from \"../Core/Utils/Constants.js\";\nimport { Vector } from \"../Core/Utils/Vectors.js\";\nimport { isNumber } from \"./TypeUtils.js\";\nlet _random = Math.random;\nconst _animationLoop = {\n    nextFrame: (cb) => requestAnimationFrame(cb),\n    cancel: (idx) => cancelAnimationFrame(idx),\n};\nexport function setRandom(rnd = Math.random) {\n    _random = rnd;\n}\nexport function getRandom() {\n    const min = 0, max = 1;\n    return clamp(_random(), min, max - Number.EPSILON);\n}\nexport function setAnimationFunctions(nextFrame, cancel) {\n    _animationLoop.nextFrame = (callback) => nextFrame(callback);\n    _animationLoop.cancel = (handle) => cancel(handle);\n}\nexport function animate(fn) {\n    return _animationLoop.nextFrame(fn);\n}\nexport function cancelAnimation(handle) {\n    _animationLoop.cancel(handle);\n}\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r), minOffset = 0;\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = minOffset;\n    }\n    return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return isNumber(value) ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return isNumber(value) ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return isNumber(value) ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined && isNumber(source))) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y, squareExp = 2;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx ** squareExp + dy ** squareExp) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function degToRad(degrees) {\n    const PIDeg = 180;\n    return (degrees * Math.PI) / PIDeg;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n    if (isNumber(direction)) {\n        return degToRad(direction);\n    }\n    switch (direction) {\n        case MoveDirection.top:\n            return -Math.PI * half;\n        case MoveDirection.topRight:\n            return -Math.PI * quarter;\n        case MoveDirection.right:\n            return empty;\n        case MoveDirection.bottomRight:\n            return Math.PI * quarter;\n        case MoveDirection.bottom:\n            return Math.PI * half;\n        case MoveDirection.bottomLeft:\n            return Math.PI * threeQuarter;\n        case MoveDirection.left:\n            return Math.PI;\n        case MoveDirection.topLeft:\n            return -Math.PI * threeQuarter;\n        case MoveDirection.inside:\n            return Math.atan2(center.y - position.y, center.x - position.x);\n        case MoveDirection.outside:\n            return Math.atan2(position.y - center.y, position.x - center.x);\n        default:\n            return getRandom() * doublePI;\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * double * m2) / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n    return data.position?.x !== undefined && data.position.y !== undefined\n        ? {\n            x: (data.position.x * data.size.width) / percentDenominator,\n            y: (data.position.y * data.size.height) / percentDenominator,\n        }\n        : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n    return {\n        x: ((data.position?.x ?? getRandom() * percentDenominator) * data.size.width) / percentDenominator,\n        y: ((data.position?.y ?? getRandom() * percentDenominator) * data.size.height) / percentDenominator,\n    };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n    return {\n        x: data.position?.x ?? getRandom() * data.size.width,\n        y: data.position?.y ?? getRandom() * data.size.height,\n    };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function parseAlpha(input) {\n    const defaultAlpha = 1;\n    if (!input) {\n        return defaultAlpha;\n    }\n    return input.endsWith(\"%\") ? parseFloat(input) / percentDenominator : parseFloat(input);\n}\n", "export var AnimationMode;\n(function (AnimationMode) {\n    AnimationMode[\"auto\"] = \"auto\";\n    AnimationMode[\"increase\"] = \"increase\";\n    AnimationMode[\"decrease\"] = \"decrease\";\n    AnimationMode[\"random\"] = \"random\";\n})(AnimationMode || (AnimationMode = {}));\n", "export var AnimationStatus;\n(function (AnimationStatus) {\n    AnimationStatus[\"increasing\"] = \"increasing\";\n    AnimationStatus[\"decreasing\"] = \"decreasing\";\n})(AnimationStatus || (AnimationStatus = {}));\n", "export var DestroyType;\n(function (DestroyType) {\n    DestroyType[\"none\"] = \"none\";\n    DestroyType[\"max\"] = \"max\";\n    DestroyType[\"min\"] = \"min\";\n})(DestroyType || (DestroyType = {}));\n", "export var OutModeDirection;\n(function (OutModeDirection) {\n    OutModeDirection[\"bottom\"] = \"bottom\";\n    OutModeDirection[\"left\"] = \"left\";\n    OutModeDirection[\"right\"] = \"right\";\n    OutModeDirection[\"top\"] = \"top\";\n})(OutModeDirection || (OutModeDirection = {}));\n", "export var PixelMode;\n(function (PixelMode) {\n    PixelMode[\"precise\"] = \"precise\";\n    PixelMode[\"percent\"] = \"percent\";\n})(PixelMode || (PixelMode = {}));\n", "export var StartValueType;\n(function (StartValueType) {\n    StartValueType[\"max\"] = \"max\";\n    StartValueType[\"min\"] = \"min\";\n    StartValueType[\"random\"] = \"random\";\n})(StartValueType || (StartValueType = {}));\n", "import { clamp, collisionVelocity, getDistances, getRandom, getRangeMax, getRangeMin, getRangeValue, randomInRange, } from \"./NumberUtils.js\";\nimport { half, millisecondsToSeconds, minVelocity, percentDenominator } from \"../Core/Utils/Constants.js\";\nimport { isArray, isNull, isObject } from \"./TypeUtils.js\";\nimport { AnimationMode } from \"../Enums/Modes/AnimationMode.js\";\nimport { AnimationStatus } from \"../Enums/AnimationStatus.js\";\nimport { DestroyType } from \"../Enums/Types/DestroyType.js\";\nimport { OutModeDirection } from \"../Enums/Directions/OutModeDirection.js\";\nimport { PixelMode } from \"../Enums/Modes/PixelMode.js\";\nimport { StartValueType } from \"../Enums/Types/StartValueType.js\";\nimport { Vector } from \"../Core/Utils/Vectors.js\";\nconst _logger = {\n    debug: console.debug,\n    error: console.error,\n    info: console.info,\n    log: console.log,\n    verbose: console.log,\n    warning: console.warn,\n};\nexport function setLogger(logger) {\n    _logger.debug = logger.debug || _logger.debug;\n    _logger.error = logger.error || _logger.error;\n    _logger.info = logger.info || _logger.info;\n    _logger.log = logger.log || _logger.log;\n    _logger.verbose = logger.verbose || _logger.verbose;\n    _logger.warning = logger.warning || _logger.warning;\n}\nexport function getLogger() {\n    return _logger;\n}\nfunction memoize(fn) {\n    const cache = new Map();\n    return (...args) => {\n        const key = JSON.stringify(args);\n        if (cache.has(key)) {\n            return cache.get(key);\n        }\n        const result = fn(...args);\n        cache.set(key, result);\n        return result;\n    };\n}\nfunction rectSideBounce(data) {\n    const res = { bounced: false }, { pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor } = data;\n    if (pOtherSide.min < rectOtherSide.min ||\n        pOtherSide.min > rectOtherSide.max ||\n        pOtherSide.max < rectOtherSide.min ||\n        pOtherSide.max > rectOtherSide.max) {\n        return res;\n    }\n    if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) * half && velocity > minVelocity) ||\n        (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) * half && velocity < minVelocity)) {\n        res.velocity = velocity * -factor;\n        res.bounced = true;\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    const res = executeOnSingleOrMultiple(selectors, selector => {\n        return element.matches(selector);\n    });\n    return isArray(res) ? res.some(t => t) : res;\n}\nexport function isSsr() {\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n    return !isSsr() && typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n    if (!hasMatchMedia()) {\n        return;\n    }\n    return matchMedia(query);\n}\nexport function safeIntersectionObserver(callback) {\n    if (isSsr() || typeof IntersectionObserver === \"undefined\") {\n        return;\n    }\n    return new IntersectionObserver(callback);\n}\nexport function safeMutationObserver(callback) {\n    if (isSsr() || typeof MutationObserver === \"undefined\") {\n        return;\n    }\n    return new MutationObserver(callback);\n}\nexport function isInArray(value, array) {\n    const invalidIndex = -1;\n    return value === array || (isArray(array) && array.indexOf(value) > invalidIndex);\n}\nexport async function loadFont(font, weight) {\n    try {\n        await document.fonts.load(`${weight ?? \"400\"} 36px '${font ?? \"Verdana\"}'`);\n    }\n    catch {\n    }\n}\nexport function arrayRandomIndex(array) {\n    return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n    return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n    const minRadius = 0;\n    return areBoundsInside(calculateBounds(point, radius ?? minRadius), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n    let inside = true;\n    if (!direction || direction === OutModeDirection.bottom) {\n        inside = bounds.top < size.height + offset.x;\n    }\n    if (inside && (!direction || direction === OutModeDirection.left)) {\n        inside = bounds.right > offset.x;\n    }\n    if (inside && (!direction || direction === OutModeDirection.right)) {\n        inside = bounds.left < size.width + offset.y;\n    }\n    if (inside && (!direction || direction === OutModeDirection.top)) {\n        inside = bounds.bottom > offset.y;\n    }\n    return inside;\n}\nexport function calculateBounds(point, radius) {\n    return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius,\n    };\n}\nexport function deepExtend(destination, ...sources) {\n    for (const source of sources) {\n        if (source === undefined || source === null) {\n            continue;\n        }\n        if (!isObject(source)) {\n            destination = source;\n            continue;\n        }\n        const sourceIsArray = Array.isArray(source);\n        if (sourceIsArray && (isObject(destination) || !destination || !Array.isArray(destination))) {\n            destination = [];\n        }\n        else if (!sourceIsArray && (isObject(destination) || !destination || Array.isArray(destination))) {\n            destination = {};\n        }\n        for (const key in source) {\n            if (key === \"__proto__\") {\n                continue;\n            }\n            const sourceDict = source, value = sourceDict[key], destDict = destination;\n            destDict[key] =\n                isObject(value) && Array.isArray(value)\n                    ? value.map(v => deepExtend(destDict[key], v))\n                    : deepExtend(destDict[key], value);\n        }\n    }\n    return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n    return !!findItemFromSingleOrMultiple(divs, t => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n    executeOnSingleOrMultiple(divs, div => {\n        const divMode = div.mode, divEnabled = div.enable;\n        if (divEnabled && isInArray(mode, divMode)) {\n            singleDivModeExecute(div, callback);\n        }\n    });\n}\nexport function singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n    executeOnSingleOrMultiple(selectors, selector => {\n        callback(selector, div);\n    });\n}\nexport function divMode(divs, element) {\n    if (!element || !divs) {\n        return;\n    }\n    return findItemFromSingleOrMultiple(divs, div => {\n        return checkSelector(element, div.selectors);\n    });\n}\nexport function circleBounceDataFromParticle(p) {\n    return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        mass: p.getMass(),\n        velocity: p.velocity,\n        factor: Vector.create(getRangeValue(p.options.bounce.horizontal.value), getRangeValue(p.options.bounce.vertical.value)),\n    };\n}\nexport function circleBounce(p1, p2) {\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1), minimumDistance = 0;\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist < minimumDistance) {\n        return;\n    }\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\n    p1.velocity.x = vFinal1.x * p1.factor.x;\n    p1.velocity.y = vFinal1.y * p1.factor.y;\n    p2.velocity.x = vFinal2.x * p2.factor.x;\n    p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), bounceOptions = particle.options.bounce, resH = rectSideBounce({\n        pSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        pOtherSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        rectSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        rectOtherSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        velocity: particle.velocity.x,\n        factor: getRangeValue(bounceOptions.horizontal.value),\n    });\n    if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n            particle.velocity.x = resH.velocity;\n        }\n        if (resH.position !== undefined) {\n            particle.position.x = resH.position;\n        }\n    }\n    const resV = rectSideBounce({\n        pSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        pOtherSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        rectSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        rectOtherSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        velocity: particle.velocity.y,\n        factor: getRangeValue(bounceOptions.vertical.value),\n    });\n    if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n            particle.velocity.y = resV.velocity;\n        }\n        if (resV.position !== undefined) {\n            particle.position.y = resV.position;\n        }\n    }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n    const defaultIndex = 0;\n    return isArray(obj) ? obj.map((item, index) => callback(item, index)) : callback(obj, defaultIndex);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n    return isArray(obj) ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n    if (isArray(obj)) {\n        return obj.find((t, index) => callback(t, index));\n    }\n    const defaultIndex = 0;\n    return callback(obj, defaultIndex) ? obj : undefined;\n}\nexport function initParticleNumericAnimationValue(options, pxRatio) {\n    const valueRange = options.value, animationOptions = options.animation, res = {\n        delayTime: getRangeValue(animationOptions.delay) * millisecondsToSeconds,\n        enable: animationOptions.enable,\n        value: getRangeValue(options.value) * pxRatio,\n        max: getRangeMax(valueRange) * pxRatio,\n        min: getRangeMin(valueRange) * pxRatio,\n        loops: 0,\n        maxLoops: getRangeValue(animationOptions.count),\n        time: 0,\n    }, decayOffset = 1;\n    if (animationOptions.enable) {\n        res.decay = decayOffset - getRangeValue(animationOptions.decay);\n        switch (animationOptions.mode) {\n            case AnimationMode.increase:\n                res.status = AnimationStatus.increasing;\n                break;\n            case AnimationMode.decrease:\n                res.status = AnimationStatus.decreasing;\n                break;\n            case AnimationMode.random:\n                res.status = getRandom() >= half ? AnimationStatus.increasing : AnimationStatus.decreasing;\n                break;\n        }\n        const autoStatus = animationOptions.mode === AnimationMode.auto;\n        switch (animationOptions.startValue) {\n            case StartValueType.min:\n                res.value = res.min;\n                if (autoStatus) {\n                    res.status = AnimationStatus.increasing;\n                }\n                break;\n            case StartValueType.max:\n                res.value = res.max;\n                if (autoStatus) {\n                    res.status = AnimationStatus.decreasing;\n                }\n                break;\n            case StartValueType.random:\n            default:\n                res.value = randomInRange(res);\n                if (autoStatus) {\n                    res.status = getRandom() >= half ? AnimationStatus.increasing : AnimationStatus.decreasing;\n                }\n                break;\n        }\n    }\n    res.initialValue = res.value;\n    return res;\n}\nfunction getPositionOrSize(positionOrSize, canvasSize) {\n    const isPercent = positionOrSize.mode === PixelMode.percent;\n    if (!isPercent) {\n        const { mode: _, ...rest } = positionOrSize;\n        return rest;\n    }\n    const isPosition = \"x\" in positionOrSize;\n    if (isPosition) {\n        return {\n            x: (positionOrSize.x / percentDenominator) * canvasSize.width,\n            y: (positionOrSize.y / percentDenominator) * canvasSize.height,\n        };\n    }\n    else {\n        return {\n            width: (positionOrSize.width / percentDenominator) * canvasSize.width,\n            height: (positionOrSize.height / percentDenominator) * canvasSize.height,\n        };\n    }\n}\nexport function getPosition(position, canvasSize) {\n    return getPositionOrSize(position, canvasSize);\n}\nexport function getSize(size, canvasSize) {\n    return getPositionOrSize(size, canvasSize);\n}\nfunction checkDestroy(particle, destroyType, value, minValue, maxValue) {\n    switch (destroyType) {\n        case DestroyType.max:\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case DestroyType.min:\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateAnimation(particle, data, changeDirection, destroyType, delta) {\n    const minLoops = 0, minDelay = 0, identity = 1, minVelocity = 0, minDecay = 1;\n    if (particle.destroyed ||\n        !data ||\n        !data.enable ||\n        ((data.maxLoops ?? minLoops) > minLoops && (data.loops ?? minLoops) > (data.maxLoops ?? minLoops))) {\n        return;\n    }\n    const velocity = (data.velocity ?? minVelocity) * delta.factor, minValue = data.min, maxValue = data.max, decay = data.decay ?? minDecay;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        return;\n    }\n    switch (data.status) {\n        case AnimationStatus.increasing:\n            if (data.value >= maxValue) {\n                if (changeDirection) {\n                    data.status = AnimationStatus.decreasing;\n                }\n                else {\n                    data.value -= maxValue;\n                }\n                if (!data.loops) {\n                    data.loops = minLoops;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += velocity;\n            }\n            break;\n        case AnimationStatus.decreasing:\n            if (data.value <= minValue) {\n                if (changeDirection) {\n                    data.status = AnimationStatus.increasing;\n                }\n                else {\n                    data.value += maxValue;\n                }\n                if (!data.loops) {\n                    data.loops = minLoops;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= velocity;\n            }\n    }\n    if (data.velocity && decay !== identity) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, destroyType, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\nexport function cloneStyle(style) {\n    const clonedStyle = document.createElement(\"div\").style;\n    if (!style) {\n        return clonedStyle;\n    }\n    for (const key in style) {\n        const styleKey = style[key];\n        if (!Object.prototype.hasOwnProperty.call(style, key) || isNull(styleKey)) {\n            continue;\n        }\n        const styleValue = style.getPropertyValue?.(styleKey);\n        if (!styleValue) {\n            continue;\n        }\n        const stylePriority = style.getPropertyPriority?.(styleKey);\n        if (!stylePriority) {\n            clonedStyle.setProperty?.(styleKey, styleValue);\n        }\n        else {\n            clonedStyle.setProperty?.(styleKey, styleValue, stylePriority);\n        }\n    }\n    return clonedStyle;\n}\nfunction computeFullScreenStyle(zIndex) {\n    const fullScreenStyle = document.createElement(\"div\").style, radix = 10, style = {\n        width: \"100%\",\n        height: \"100%\",\n        margin: \"0\",\n        padding: \"0\",\n        borderWidth: \"0\",\n        position: \"fixed\",\n        zIndex: zIndex.toString(radix),\n        \"z-index\": zIndex.toString(radix),\n        top: \"0\",\n        left: \"0\",\n    };\n    for (const key in style) {\n        const value = style[key];\n        fullScreenStyle.setProperty(key, value);\n    }\n    return fullScreenStyle;\n}\nexport const getFullScreenStyle = memoize(computeFullScreenStyle);\n", "export var AlterType;\n(function (AlterType) {\n    AlterType[\"darken\"] = \"darken\";\n    AlterType[\"enlighten\"] = \"enlighten\";\n})(AlterType || (AlterType = {}));\n", "import { clamp, getRandom, getRangeMax, getRangeMin, getRangeValue, mix, randomInRange, setRangeValue, } from \"./NumberUtils.js\";\nimport { decayOffset, defaultLoops, defaultOpacity, defaultRgbMin, defaultTime, defaultVelocity, double, hMax, hMin, hPhase, half, identity, lMax, lMin, midColorValue, millisecondsToSeconds, percentDenominator, phaseNumerator, randomColorValue, rgbFactor, rgbMax, sMax, sMin, sNormalizedOffset, sextuple, triple, } from \"../Core/Utils/Constants.js\";\nimport { isArray, isString } from \"./TypeUtils.js\";\nimport { AnimationStatus } from \"../Enums/AnimationStatus.js\";\nimport { itemFromArray } from \"./Utils.js\";\nfunction stringToRgba(engine, input) {\n    if (!input) {\n        return;\n    }\n    for (const manager of engine.colorManagers.values()) {\n        if (input.startsWith(manager.stringPrefix)) {\n            return manager.parseString(input);\n        }\n    }\n}\nexport function rangeColorToRgb(engine, input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return colorToRgb(engine, color.value, index, useIndex);\n    }\n    if (isArray(color.value)) {\n        return rangeColorToRgb(engine, {\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const manager of engine.colorManagers.values()) {\n        const res = manager.handleRangeColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToRgb(engine, input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(engine, color.value);\n    }\n    if (isArray(color.value)) {\n        return colorToRgb(engine, {\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const manager of engine.colorManagers.values()) {\n        const res = manager.handleColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToHsl(engine, color, index, useIndex = true) {\n    const rgb = colorToRgb(engine, color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(engine, color, index, useIndex = true) {\n    const rgb = rangeColorToRgb(engine, color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const r1 = color.r / rgbMax, g1 = color.g / rgbMax, b1 = color.b / rgbMax, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\n        h: hMin,\n        l: (max + min) * half,\n        s: sMin,\n    };\n    if (max !== min) {\n        res.s = res.l < half ? (max - min) / (max + min) : (max - min) / (double - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? double + (b1 - r1) / (max - min) : double * double + (r1 - g1) / (max - min));\n    }\n    res.l *= lMax;\n    res.s *= sMax;\n    res.h *= hPhase;\n    if (res.h < hMin) {\n        res.h += hMax;\n    }\n    if (res.h >= hMax) {\n        res.h -= hMax;\n    }\n    return res;\n}\nexport function stringToAlpha(engine, input) {\n    return stringToRgba(engine, input)?.a;\n}\nexport function stringToRgb(engine, input) {\n    return stringToRgba(engine, input);\n}\nexport function hslToRgb(hsl) {\n    const h = ((hsl.h % hMax) + hMax) % hMax, s = Math.max(sMin, Math.min(sMax, hsl.s)), l = Math.max(lMin, Math.min(lMax, hsl.l)), hNormalized = h / hMax, sNormalized = s / sMax, lNormalized = l / lMax;\n    if (s === sMin) {\n        const grayscaleValue = Math.round(lNormalized * rgbFactor);\n        return { r: grayscaleValue, g: grayscaleValue, b: grayscaleValue };\n    }\n    const channel = (temp1, temp2, temp3) => {\n        const temp3Min = 0, temp3Max = 1;\n        if (temp3 < temp3Min) {\n            temp3++;\n        }\n        if (temp3 > temp3Max) {\n            temp3--;\n        }\n        if (temp3 * sextuple < temp3Max) {\n            return temp1 + (temp2 - temp1) * sextuple * temp3;\n        }\n        if (temp3 * double < temp3Max) {\n            return temp2;\n        }\n        if (temp3 * triple < temp3Max * double) {\n            const temp3Offset = double / triple;\n            return temp1 + (temp2 - temp1) * (temp3Offset - temp3) * sextuple;\n        }\n        return temp1;\n    }, temp1 = lNormalized < half\n        ? lNormalized * (sNormalizedOffset + sNormalized)\n        : lNormalized + sNormalized - lNormalized * sNormalized, temp2 = double * lNormalized - temp1, phaseThird = phaseNumerator / triple, red = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized + phaseThird)), green = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized)), blue = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized - phaseThird));\n    return { r: Math.round(red), g: Math.round(green), b: Math.round(blue) };\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const fixedMin = min ?? defaultRgbMin, fixedMax = rgbMax + identity;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, fixedMax))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, fixedMax))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, fixedMax))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity ?? defaultOpacity})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity ?? defaultOpacity})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1, rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    if (linkColor === randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === midColorValue) {\n        const sourceColor = p1.getFillColor() ?? p1.getStrokeColor(), destColor = p2?.getFillColor() ?? p2?.getStrokeColor();\n        if (sourceColor && destColor && p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor ?? destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(engine, optColor, blink, consent) {\n    const color = isString(optColor) ? optColor : optColor.value;\n    if (color === randomColorValue) {\n        if (consent) {\n            return rangeColorToRgb(engine, {\n                value: color,\n            });\n        }\n        if (blink) {\n            return randomColorValue;\n        }\n        return midColorValue;\n    }\n    else if (color === midColorValue) {\n        return midColorValue;\n    }\n    else {\n        return rangeColorToRgb(engine, {\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    if (colorValue.enable) {\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / percentDenominator) * reduceFactor;\n        colorValue.decay = decayOffset - getRangeValue(colorAnimation.decay);\n        colorValue.status = AnimationStatus.increasing;\n        colorValue.loops = defaultLoops;\n        colorValue.maxLoops = getRangeValue(colorAnimation.count);\n        colorValue.time = defaultTime;\n        colorValue.delayTime = getRangeValue(colorAnimation.delay) * millisecondsToSeconds;\n        if (!colorAnimation.sync) {\n            colorValue.velocity *= getRandom();\n            colorValue.value *= getRandom();\n        }\n        colorValue.initialValue = colorValue.value;\n        colorValue.offset = setRangeValue(colorAnimation.offset);\n    }\n    else {\n        colorValue.velocity = defaultVelocity;\n    }\n}\nexport function updateColorValue(data, range, decrease, delta) {\n    const minLoops = 0, minDelay = 0, identity = 1, minVelocity = 0, minOffset = 0, velocityFactor = 3.6;\n    if (!data ||\n        !data.enable ||\n        ((data.maxLoops ?? minLoops) > minLoops && (data.loops ?? minLoops) > (data.maxLoops ?? minLoops))) {\n        return;\n    }\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        return;\n    }\n    const offset = data.offset ? randomInRange(data.offset) : minOffset, velocity = (data.velocity ?? minVelocity) * delta.factor + offset * velocityFactor, decay = data.decay ?? identity, max = getRangeMax(range), min = getRangeMin(range);\n    if (!decrease || data.status === AnimationStatus.increasing) {\n        data.value += velocity;\n        if (data.value > max) {\n            if (!data.loops) {\n                data.loops = 0;\n            }\n            data.loops++;\n            if (decrease) {\n                data.status = AnimationStatus.decreasing;\n            }\n            else {\n                data.value -= max;\n            }\n        }\n    }\n    else {\n        data.value -= velocity;\n        const minValue = 0;\n        if (data.value < minValue) {\n            if (!data.loops) {\n                data.loops = 0;\n            }\n            data.loops++;\n            data.status = AnimationStatus.increasing;\n        }\n    }\n    if (data.velocity && decay !== identity) {\n        data.velocity *= decay;\n    }\n    data.value = clamp(data.value, min, max);\n}\nexport function updateColor(color, delta) {\n    if (!color) {\n        return;\n    }\n    const { h, s, l } = color, ranges = {\n        h: { min: 0, max: 360 },\n        s: { min: 0, max: 100 },\n        l: { min: 0, max: 100 },\n    };\n    if (h) {\n        updateColorValue(h, ranges.h, false, delta);\n    }\n    if (s) {\n        updateColorValue(s, ranges.s, true, delta);\n    }\n    if (l) {\n        updateColorValue(l, ranges.l, true, delta);\n    }\n}\n", "import { defaultAngle, defaultTransform, identity, lFactor, minStrokeWidth, originPoint, } from \"../Core/Utils/Constants.js\";\nimport { AlterType } from \"../Enums/Types/AlterType.js\";\nimport { getStyleFromRgb } from \"./ColorUtils.js\";\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.fillStyle = baseColor ?? \"rgba(0,0,0,0)\";\n    context.fillRect(originPoint.x, originPoint.y, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n    if (!image) {\n        return;\n    }\n    context.globalAlpha = opacity;\n    context.drawImage(image, originPoint.x, originPoint.y, dimension.width, dimension.height);\n    context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n    context.clearRect(originPoint.x, originPoint.y, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data, pos = particle.getPosition(), angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : defaultAngle), rotateData = {\n        sin: Math.sin(angle),\n        cos: Math.cos(angle),\n    }, rotating = !!angle, transformData = {\n        a: rotateData.cos * (transform.a ?? defaultTransform.a),\n        b: rotating ? rotateData.sin * (transform.b ?? identity) : (transform.b ?? defaultTransform.b),\n        c: rotating ? -rotateData.sin * (transform.c ?? identity) : (transform.c ?? defaultTransform.c),\n        d: rotateData.cos * (transform.d ?? defaultTransform.d),\n    };\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const strokeWidth = particle.strokeWidth ?? minStrokeWidth;\n    context.lineWidth = strokeWidth;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    const drawData = {\n        container,\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        transformData,\n        strokeWidth,\n    };\n    drawShape(drawData);\n    drawShapeAfterDraw(drawData);\n    drawEffect(drawData);\n    context.globalCompositeOperation = \"source-over\";\n    context.resetTransform();\n}\nexport function drawEffect(data) {\n    const { container, context, particle, radius, opacity, delta, transformData } = data;\n    if (!particle.effect) {\n        return;\n    }\n    const drawer = container.effectDrawers.get(particle.effect);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw({\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        pixelRatio: container.retina.pixelRatio,\n        transformData: { ...transformData },\n    });\n}\nexport function drawShape(data) {\n    const { container, context, particle, radius, opacity, delta, strokeWidth, transformData } = data;\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.shapeDrawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    context.beginPath();\n    drawer.draw({\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        pixelRatio: container.retina.pixelRatio,\n        transformData: { ...transformData },\n    });\n    if (particle.shapeClose) {\n        context.closePath();\n    }\n    if (strokeWidth > minStrokeWidth) {\n        context.stroke();\n    }\n    if (particle.shapeFill) {\n        context.fill();\n    }\n}\nexport function drawShapeAfterDraw(data) {\n    const { container, context, particle, radius, opacity, delta, transformData } = data;\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.shapeDrawers.get(particle.shape);\n    if (!drawer?.afterDraw) {\n        return;\n    }\n    drawer.afterDraw({\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        pixelRatio: container.retina.pixelRatio,\n        transformData: { ...transformData },\n    });\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === AlterType.darken ? -lFactor : lFactor) * value,\n    };\n}\n", "import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils.js\";\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \"../Utils/Utils.js\";\nimport { defaultOpacity, defaultTransformValue, generatedAttribute, inverseFactorNumerator, minimumLength, minimumSize, zIndexFactorOffset, } from \"./Utils/Constants.js\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? defaultTransformValue) * newValue;\n    }\n}\nfunction setStyle(canvas, style, important = false) {\n    if (!style) {\n        return;\n    }\n    const element = canvas;\n    if (!element) {\n        return;\n    }\n    const elementStyle = element.style;\n    if (!elementStyle) {\n        return;\n    }\n    const keys = new Set();\n    for (const key in elementStyle) {\n        if (!Object.prototype.hasOwnProperty.call(elementStyle, key)) {\n            continue;\n        }\n        keys.add(elementStyle[key]);\n    }\n    for (const key in style) {\n        if (!Object.prototype.hasOwnProperty.call(style, key)) {\n            continue;\n        }\n        keys.add(style[key]);\n    }\n    for (const key of keys) {\n        const value = style.getPropertyValue(key);\n        if (!value) {\n            elementStyle.removeProperty(key);\n        }\n        else {\n            elementStyle.setProperty(key, value, important ? \"important\" : \"\");\n        }\n    }\n}\nexport class Canvas {\n    constructor(container, engine) {\n        this.container = container;\n        this._applyPostDrawUpdaters = particle => {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw?.(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw?.(particle);\n            }\n        };\n        this._applyResizePlugins = () => {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize?.();\n            }\n        };\n        this._getPluginParticleColors = particle => {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor && plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(this._engine, plugin.particleFillColor(particle));\n                }\n                if (!sColor && plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(this._engine, plugin.particleStrokeColor(particle));\n                }\n                if (fColor && sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = async () => {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color;\n            if (color) {\n                const coverRgb = rangeColorToRgb(this._engine, color);\n                if (coverRgb) {\n                    const coverColor = {\n                        ...coverRgb,\n                        a: cover.opacity,\n                    };\n                    this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n                }\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!cover.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._coverImage = {\n                            image: img,\n                            opacity: cover.opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", evt => {\n                        reject(evt.error);\n                    });\n                    img.src = cover.image;\n                });\n            }\n        };\n        this._initStyle = () => {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style || !Object.prototype.hasOwnProperty.call(options.style, key)) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () => {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            const opacity = inverseFactorNumerator / trail.length;\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(this._engine, trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._trailFill = {\n                            image: img,\n                            opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", evt => {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = baseColor => {\n            this.draw(ctx => paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) => {\n            this.draw(ctx => paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver(observer => observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            this._safeMutationObserver(observer => {\n                if (!element || !(element instanceof Node)) {\n                    return;\n                }\n                observer.observe(element, { attributes: true });\n            });\n        };\n        this._resetOriginalStyle = () => {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!element || !originalStyle) {\n                return;\n            }\n            setStyle(element, originalStyle, true);\n        };\n        this._safeMutationObserver = callback => {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            setStyle(element, getFullScreenStyle(this.container.actualOptions.fullScreen.zIndex), true);\n        };\n        this._engine = engine;\n        this._standardSize = {\n            height: 0,\n            width: 0,\n        };\n        const pxRatio = container.retina.pixelRatio, stdSize = this._standardSize;\n        this.size = {\n            height: stdSize.height * pxRatio,\n            width: stdSize.width * pxRatio,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > minimumLength && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else if (options.clear) {\n            this.draw(ctx => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this._generated) {\n            const element = this.element;\n            element?.remove();\n            this.element = undefined;\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawAsync(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return undefined;\n        }\n        return cb(ctx);\n    }\n    drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= minimumSize) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zIndexFactor = zIndexFactorOffset - particle.zIndexFactor, zOpacityFactor = zIndexFactor ** zIndexOptions.opacityRate, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? defaultOpacity, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * zIndexFactor ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw(ctx => drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    drawPlugin(plugin, delta) {\n        this.draw(ctx => drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this._safeMutationObserver(obs => obs.disconnect());\n        this._mutationObserver = safeMutationObserver(records => {\n            for (const record of records) {\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                    this._repairStyle();\n                }\n            }\n        });\n        this.resize();\n        this._initStyle();\n        await this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            getLogger().error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver(obs => {\n            if (!this.element || !(this.element instanceof Node)) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(this._engine, background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const plugin of this.container.plugins.values()) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor ?? plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles ?? updater.getTransformValues ?? updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated && this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = cloneStyle(this.element.style);\n        const standardSize = this._standardSize;\n        standardSize.height = canvas.offsetHeight;\n        standardSize.width = canvas.offsetWidth;\n        const pxRatio = this.container.retina.pixelRatio, retinaSize = this.size;\n        canvas.height = retinaSize.height = standardSize.height * pxRatio;\n        canvas.width = retinaSize.width = standardSize.width * pxRatio;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver(obs => obs.disconnect());\n        this.container.retina.init();\n        this.initBackground();\n        this._safeMutationObserver(obs => {\n            if (!this.element || !(this.element instanceof Node)) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw(ctx => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                if (this._coverImage) {\n                    this._paintImage(this._coverImage.image, this._coverImage.opacity);\n                }\n                else if (this._coverColorStyle) {\n                    this._paintBase(this._coverColorStyle);\n                }\n                else {\n                    this._paintBase();\n                }\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, currentSize = container.canvas._standardSize, newSize = {\n            width: this.element.offsetWidth,\n            height: this.element.offsetHeight,\n        }, pxRatio = container.retina.pixelRatio, retinaSize = {\n            width: newSize.width * pxRatio,\n            height: newSize.height * pxRatio,\n        };\n        if (newSize.height === currentSize.height &&\n            newSize.width === currentSize.width &&\n            retinaSize.height === this.element.height &&\n            retinaSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...currentSize };\n        currentSize.height = newSize.height;\n        currentSize.width = newSize.width;\n        const canvasSize = this.size;\n        this.element.width = canvasSize.width = retinaSize.width;\n        this.element.height = canvasSize.height = retinaSize.height;\n        if (this.container.started) {\n            container.particles.setResizeFactor({\n                width: currentSize.width / oldSize.width,\n                height: currentSize.height / oldSize.height,\n            });\n        }\n        return true;\n    }\n    stop() {\n        this._safeMutationObserver(obs => obs.disconnect());\n        this._mutationObserver = undefined;\n        this.draw(ctx => clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n", "export var InteractivityDetect;\n(function (InteractivityDetect) {\n    InteractivityDetect[\"canvas\"] = \"canvas\";\n    InteractivityDetect[\"parent\"] = \"parent\";\n    InteractivityDetect[\"window\"] = \"window\";\n})(InteractivityDetect || (InteractivityDetect = {}));\n", "import { double, lengthOffset, millisecondsToSeconds, minCoordinate, mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchDelay, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants.js\";\nimport { executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils.js\";\nimport { InteractivityDetect } from \"../../Enums/InteractivityDetect.js\";\nimport { isBoolean } from \"../../Utils/TypeUtils.js\";\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (isBoolean(options)) {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this._doMouseTouchClick = e => {\n            const container = this.container, options = container.actualOptions;\n            if (this._canPush) {\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n                if (!mousePos) {\n                    return;\n                }\n                mouseInteractivity.clickPosition = { ...mousePos };\n                mouseInteractivity.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                executeOnSingleOrMultiple(onClick.mode, mode => this.container.handleClickMode(mode));\n            }\n            if (e.type === \"touchend\") {\n                setTimeout(() => this._mouseTouchFinish(), touchDelay);\n            }\n        };\n        this._handleThemeChange = (e) => {\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find(theme => theme.name === themeName);\n            if (theme?.default.auto) {\n                void container.loadTheme(themeName);\n            }\n        };\n        this._handleVisibilityChange = () => {\n            const container = this.container, options = container.actualOptions;\n            this._mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document?.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.animationStatus) {\n                    void container.play(true);\n                }\n                else {\n                    void container.draw(true);\n                }\n            }\n        };\n        this._handleWindowResize = () => {\n            if (this._resizeTimeout) {\n                clearTimeout(this._resizeTimeout);\n                delete this._resizeTimeout;\n            }\n            const handleResize = async () => {\n                const canvas = this.container.canvas;\n                await canvas?.windowResize();\n            };\n            this._resizeTimeout = setTimeout(() => void handleResize(), this.container.actualOptions.interactivity.events.resize.delay * millisecondsToSeconds);\n        };\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, interactivityEl = container.interactivity.element;\n            if (!interactivityEl) {\n                return;\n            }\n            const html = interactivityEl, canvasEl = container.canvas.element;\n            if (canvasEl) {\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n            }\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                return;\n            }\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        };\n        this._manageListeners = add => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\n            if (detectType === InteractivityDetect.window) {\n                container.interactivity.element = window;\n                mouseLeaveTmpEvent = mouseOutEvent;\n            }\n            else if (detectType === InteractivityDetect.parent && canvasEl) {\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n            }\n            else {\n                container.interactivity.element = canvasEl;\n            }\n            this._manageMediaMatch(add);\n            this._manageResize(add);\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n            if (document) {\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n            }\n        };\n        this._manageMediaMatch = add => {\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n            if (!mediaMatch) {\n                return;\n            }\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n                return;\n            }\n            if (mediaMatch.addListener === undefined) {\n                return;\n            }\n            if (add) {\n                mediaMatch.addListener(handlers.oldThemeChange);\n            }\n            else {\n                mediaMatch.removeListener(handlers.oldThemeChange);\n            }\n        };\n        this._manageResize = add => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            if (!options.interactivity.events.resize) {\n                return;\n            }\n            if (typeof ResizeObserver === \"undefined\") {\n                manageListener(window, resizeEvent, handlers.resize, add);\n                return;\n            }\n            const canvasEl = container.canvas.element;\n            if (this._resizeObserver && !add) {\n                if (canvasEl) {\n                    this._resizeObserver.unobserve(canvasEl);\n                }\n                this._resizeObserver.disconnect();\n                delete this._resizeObserver;\n            }\n            else if (!this._resizeObserver && add && canvasEl) {\n                this._resizeObserver = new ResizeObserver((entries) => {\n                    const entry = entries.find(e => e.target === canvasEl);\n                    if (!entry) {\n                        return;\n                    }\n                    this._handleWindowResize();\n                });\n                this._resizeObserver.observe(canvasEl);\n            }\n        };\n        this._mouseDown = () => {\n            const { interactivity } = this.container;\n            if (!interactivity) {\n                return;\n            }\n            const { mouse } = interactivity;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        };\n        this._mouseTouchClick = e => {\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const plugin of container.plugins.values()) {\n                if (!plugin.clickPositionValid) {\n                    continue;\n                }\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n            if (!handled) {\n                this._doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        };\n        this._mouseTouchFinish = () => {\n            const interactivity = this.container.interactivity;\n            if (!interactivity) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        };\n        this._mouseTouchMove = e => {\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\n            if (!interactivity?.element) {\n                return;\n            }\n            interactivity.mouse.inside = true;\n            let pos;\n            if (e.type.startsWith(\"pointer\")) {\n                this._canPush = true;\n                const mouseEvent = e;\n                if (interactivity.element === window) {\n                    if (canvasEl) {\n                        const clientRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === InteractivityDetect.parent) {\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\n                    if (source && target && canvasEl) {\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + double * sourceRect.left - (targetRect.left + canvasRect.left),\n                            y: mouseEvent.offsetY + double * sourceRect.top - (targetRect.top + canvasRect.top),\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                        };\n                    }\n                }\n                else if (mouseEvent.target === canvasEl) {\n                    pos = {\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                this._canPush = e.type !== \"touchmove\";\n                if (canvasEl) {\n                    const touchEvent = e, lastTouch = touchEvent.touches[touchEvent.touches.length - lengthOffset], canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: lastTouch.clientX - (canvasRect.left ?? minCoordinate),\n                        y: lastTouch.clientY - (canvasRect.top ?? minCoordinate),\n                    };\n                }\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            interactivity.mouse.position = pos;\n            interactivity.status = mouseMoveEvent;\n        };\n        this._touchEnd = e => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchFinish();\n        };\n        this._touchEndClick = e => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchClick(e);\n        };\n        this._touchStart = e => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.set(touch.identifier, performance.now());\n            }\n            this._mouseTouchMove(e);\n        };\n        this._canPush = true;\n        this._touches = new Map();\n        this._handlers = {\n            mouseDown: () => this._mouseDown(),\n            mouseLeave: () => this._mouseTouchFinish(),\n            mouseMove: (e) => this._mouseTouchMove(e),\n            mouseUp: (e) => this._mouseTouchClick(e),\n            touchStart: (e) => this._touchStart(e),\n            touchMove: (e) => this._mouseTouchMove(e),\n            touchEnd: (e) => this._touchEnd(e),\n            touchCancel: (e) => this._touchEnd(e),\n            touchEndClick: (e) => this._touchEndClick(e),\n            visibilityChange: () => this._handleVisibilityChange(),\n            themeChange: (e) => this._handleThemeChange(e),\n            oldThemeChange: (e) => this._handleThemeChange(e),\n            resize: () => {\n                this._handleWindowResize();\n            },\n        };\n    }\n    addListeners() {\n        this._manageListeners(true);\n    }\n    removeListeners() {\n        this._manageListeners(false);\n    }\n}\n", "export var EventType;\n(function (EventType) {\n    EventType[\"configAdded\"] = \"configAdded\";\n    EventType[\"containerInit\"] = \"containerInit\";\n    EventType[\"particlesSetup\"] = \"particlesSetup\";\n    EventType[\"containerStarted\"] = \"containerStarted\";\n    EventType[\"containerStopped\"] = \"containerStopped\";\n    EventType[\"containerDestroyed\"] = \"containerDestroyed\";\n    EventType[\"containerPaused\"] = \"containerPaused\";\n    EventType[\"containerPlay\"] = \"containerPlay\";\n    EventType[\"containerBuilt\"] = \"containerBuilt\";\n    EventType[\"particleAdded\"] = \"particleAdded\";\n    EventType[\"particleDestroyed\"] = \"particleDestroyed\";\n    EventType[\"particleRemoved\"] = \"particleRemoved\";\n})(EventType || (EventType = {}));\n", "import { isArray, isNull, isString } from \"../../Utils/TypeUtils.js\";\nexport class OptionsColor {\n    constructor() {\n        this.value = \"\";\n    }\n    static create(source, data) {\n        const color = new OptionsColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (!isNull(data.value)) {\n            this.value = data.value;\n        }\n    }\n}\n", "import { OptionsColor } from \"../OptionsColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Background {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"\";\n        this.image = \"\";\n        this.position = \"\";\n        this.repeat = \"\";\n        this.size = \"\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.position !== undefined) {\n            this.position = data.position;\n        }\n        if (data.repeat !== undefined) {\n            this.repeat = data.repeat;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n", "import { OptionsColor } from \"../OptionsColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class BackgroundMaskCover {\n    constructor() {\n        this.opacity = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n", "import { isNull, isString } from \"../../../Utils/TypeUtils.js\";\nimport { BackgroundMaskCover } from \"./BackgroundMaskCover.js\";\nexport class BackgroundMask {\n    constructor() {\n        this.composite = \"destination-out\";\n        this.cover = new BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.composite !== undefined) {\n            this.composite = data.composite;\n        }\n        if (data.cover !== undefined) {\n            const cover = data.cover, color = (isString(data.cover) ? { color: data.cover } : data.cover);\n            this.cover.load(cover.color !== undefined || cover.image !== undefined ? cover : { color: color });\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n", "import { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class FullScreen {\n    constructor() {\n        this.enable = true;\n        this.zIndex = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n    }\n}\n", "import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n    }\n}\n", "export var DivType;\n(function (DivType) {\n    DivType[\"circle\"] = \"circle\";\n    DivType[\"rectangle\"] = \"rectangle\";\n})(DivType || (DivType = {}));\n", "import { DivType } from \"../../../../Enums/Types/DivType.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class DivEvent {\n    constructor() {\n        this.selectors = [];\n        this.enable = false;\n        this.mode = [];\n        this.type = DivType.circle;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n", "import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.force !== undefined) {\n            this.force = data.force;\n        }\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n    }\n}\n", "import { Parallax } from \"./Parallax.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.parallax.load(data.parallax);\n    }\n}\n", "import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ResizeEvent {\n    constructor() {\n        this.delay = 0.5;\n        this.enable = true;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n", "import { ClickEvent } from \"./ClickEvent.js\";\nimport { DivEvent } from \"./DivEvent.js\";\nimport { HoverEvent } from \"./HoverEvent.js\";\nimport { ResizeEvent } from \"./ResizeEvent.js\";\nimport { executeOnSingleOrMultiple } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Events {\n    constructor() {\n        this.onClick = new ClickEvent();\n        this.onDiv = new DivEvent();\n        this.onHover = new HoverEvent();\n        this.resize = new ResizeEvent();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.onClick.load(data.onClick);\n        const onDiv = data.onDiv;\n        if (onDiv !== undefined) {\n            this.onDiv = executeOnSingleOrMultiple(onDiv, t => {\n                const tmp = new DivEvent();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.onHover.load(data.onHover);\n        this.resize.load(data.resize);\n    }\n}\n", "import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Modes {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (!this._container) {\n            return;\n        }\n        const interactors = this._engine.interactors.get(this._container);\n        if (!interactors) {\n            return;\n        }\n        for (const interactor of interactors) {\n            if (!interactor.loadModeOptions) {\n                continue;\n            }\n            interactor.loadModeOptions(this, data);\n        }\n    }\n}\n", "import { Events } from \"./Events/Events.js\";\nimport { InteractivityDetect } from \"../../../Enums/InteractivityDetect.js\";\nimport { Modes } from \"./Modes/Modes.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Interactivity {\n    constructor(engine, container) {\n        this.detectsOn = InteractivityDetect.window;\n        this.events = new Events();\n        this.modes = new Modes(engine, container);\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        const detectsOn = data.detectsOn;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n    }\n}\n", "import { PixelMode } from \"../../Enums/Modes/PixelMode.js\";\nimport { deepExtend } from \"../../Utils/Utils.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nimport { manualDefaultPosition } from \"../../Core/Utils/Constants.js\";\nexport class ManualParticle {\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.position) {\n            this.position = {\n                x: data.position.x ?? manualDefaultPosition,\n                y: data.position.y ?? manualDefaultPosition,\n                mode: data.position.mode ?? PixelMode.percent,\n            };\n        }\n        if (data.options) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n", "export var ResponsiveMode;\n(function (ResponsiveMode) {\n    ResponsiveMode[\"screen\"] = \"screen\";\n    ResponsiveMode[\"canvas\"] = \"canvas\";\n})(ResponsiveMode || (ResponsiveMode = {}));\n", "import { ResponsiveMode } from \"../../Enums/Modes/ResponsiveMode.js\";\nimport { deepExtend } from \"../../Utils/Utils.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nexport class Responsive {\n    constructor() {\n        this.maxWidth = Infinity;\n        this.options = {};\n        this.mode = ResponsiveMode.canvas;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (!isNull(data.maxWidth)) {\n            this.maxWidth = data.maxWidth;\n        }\n        if (!isNull(data.mode)) {\n            if (data.mode === ResponsiveMode.screen) {\n                this.mode = ResponsiveMode.screen;\n            }\n            else {\n                this.mode = ResponsiveMode.canvas;\n            }\n        }\n        if (!isNull(data.options)) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n", "export var ThemeMode;\n(function (ThemeMode) {\n    ThemeMode[\"any\"] = \"any\";\n    ThemeMode[\"dark\"] = \"dark\";\n    ThemeMode[\"light\"] = \"light\";\n})(ThemeMode || (ThemeMode = {}));\n", "import { ThemeMode } from \"../../../Enums/Modes/ThemeMode.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class ThemeDefault {\n    constructor() {\n        this.auto = false;\n        this.mode = ThemeMode.any;\n        this.value = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.auto !== undefined) {\n            this.auto = data.auto;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n", "import { ThemeDefault } from \"./ThemeDefault.js\";\nimport { deepExtend } from \"../../../Utils/Utils.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Theme {\n    constructor() {\n        this.name = \"\";\n        this.default = new ThemeDefault();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        this.default.load(data.default);\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n", "import { AnimationMode } from \"../../Enums/Modes/AnimationMode.js\";\nimport { StartValueType } from \"../../Enums/Types/StartValueType.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class AnimationOptions {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 1;\n        this.decay = 0;\n        this.delay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexport class RangedAnimationOptions extends AnimationOptions {\n    constructor() {\n        super();\n        this.mode = AnimationMode.auto;\n        this.startValue = StartValueType.random;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n    }\n}\n", "import { AnimationOptions } from \"./AnimationOptions.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class ColorAnimation extends AnimationOptions {\n    constructor() {\n        super();\n        this.offset = 0;\n        this.sync = true;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n    }\n}\n", "import { ColorAnimation } from \"./ColorAnimation.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nexport class HslAnimation {\n    constructor() {\n        this.h = new ColorAnimation();\n        this.s = new ColorAnimation();\n        this.l = new ColorAnimation();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.h.load(data.h);\n        this.s.load(data.s);\n        this.l.load(data.l);\n    }\n}\n", "import { isArray, isNull, isString } from \"../../Utils/TypeUtils.js\";\nimport { HslAnimation } from \"./HslAnimation.js\";\nimport { OptionsColor } from \"./OptionsColor.js\";\nexport class AnimatableColor extends OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation();\n    }\n    static create(source, data) {\n        const color = new AnimatableColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\n", "export var CollisionMode;\n(function (CollisionMode) {\n    CollisionMode[\"absorb\"] = \"absorb\";\n    CollisionMode[\"bounce\"] = \"bounce\";\n    CollisionMode[\"destroy\"] = \"destroy\";\n})(CollisionMode || (CollisionMode = {}));\n", "import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class CollisionsAbsorb {\n    constructor() {\n        this.speed = 2;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n", "import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class CollisionsOverlap {\n    constructor() {\n        this.enable = true;\n        this.retries = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\n", "import { AnimationOptions, RangedAnimationOptions } from \"./AnimationOptions.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class ValueWithRandom {\n    constructor() {\n        this.value = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (!isNull(data.value)) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\nexport class AnimationValueWithRandom extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new AnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        const animation = data.animation;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\nexport class RangedAnimationValueWithRandom extends AnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RangedAnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n    }\n}\n", "import { ValueWithRandom } from \"../../ValueWithRandom.js\";\nexport class ParticlesBounceFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = 1;\n    }\n}\n", "import { ParticlesBounceFactor } from \"./ParticlesBounceFactor.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesBounce {\n    constructor() {\n        this.horizontal = new ParticlesBounceFactor();\n        this.vertical = new ParticlesBounceFactor();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.horizontal.load(data.horizontal);\n        this.vertical.load(data.vertical);\n    }\n}\n", "import { CollisionMode } from \"../../../../Enums/Modes/CollisionMode.js\";\nimport { CollisionsAbsorb } from \"./CollisionsAbsorb.js\";\nimport { CollisionsOverlap } from \"./CollisionsOverlap.js\";\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class Collisions {\n    constructor() {\n        this.absorb = new CollisionsAbsorb();\n        this.bounce = new ParticlesBounce();\n        this.enable = false;\n        this.maxSpeed = 50;\n        this.mode = CollisionMode.bounce;\n        this.overlap = new CollisionsOverlap();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.absorb.load(data.absorb);\n        this.bounce.load(data.bounce);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.overlap.load(data.overlap);\n    }\n}\n", "import { deepExtend } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Effect {\n    constructor() {\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = [];\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        const options = data.options;\n        if (options !== undefined) {\n            for (const effect in options) {\n                const item = options[effect];\n                if (item) {\n                    this.options[effect] = deepExtend(this.options[effect] ?? {}, item);\n                }\n            }\n        }\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n", "import { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class MoveAngle {\n    constructor() {\n        this.offset = 0;\n        this.value = 90;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n", "import { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class MoveAttract {\n    constructor() {\n        this.distance = 200;\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.rotate) {\n            const rotateX = data.rotate.x;\n            if (rotateX !== undefined) {\n                this.rotate.x = rotateX;\n            }\n            const rotateY = data.rotate.y;\n            if (rotateY !== undefined) {\n                this.rotate.y = rotateY;\n            }\n        }\n    }\n}\n", "import { PixelMode } from \"../../../../Enums/Modes/PixelMode.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class MoveCenter {\n    constructor() {\n        this.x = 50;\n        this.y = 50;\n        this.mode = PixelMode.percent;\n        this.radius = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.x !== undefined) {\n            this.x = data.x;\n        }\n        if (data.y !== undefined) {\n            this.y = data.y;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n", "import { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class MoveGravity {\n    constructor() {\n        this.acceleration = 9.81;\n        this.enable = false;\n        this.inverse = false;\n        this.maxSpeed = 50;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.inverse !== undefined) {\n            this.inverse = data.inverse;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n    }\n}\n", "import { ValueWithRandom } from \"../../../ValueWithRandom.js\";\nimport { deepExtend } from \"../../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../../Utils/TypeUtils.js\";\nexport class MovePath {\n    constructor() {\n        this.clamp = true;\n        this.delay = new ValueWithRandom();\n        this.enable = false;\n        this.options = {};\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.clamp !== undefined) {\n            this.clamp = data.clamp;\n        }\n        this.delay.load(data.delay);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.generator = data.generator;\n        if (data.options) {\n            this.options = deepExtend(this.options, data.options);\n        }\n    }\n}\n", "import { OptionsColor } from \"../../OptionsColor.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class MoveTrailFill {\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n    }\n}\n", "import { MoveTrailFill } from \"./MoveTrailFill.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class MoveTrail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fill = new MoveTrailFill();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.fill !== undefined) {\n            this.fill.load(data.fill);\n        }\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n", "export var OutMode;\n(function (OutMode) {\n    OutMode[\"bounce\"] = \"bounce\";\n    OutMode[\"none\"] = \"none\";\n    OutMode[\"out\"] = \"out\";\n    OutMode[\"destroy\"] = \"destroy\";\n    OutMode[\"split\"] = \"split\";\n})(OutMode || (OutMode = {}));\n", "import { OutMode } from \"../../../../Enums/Modes/OutMode.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class OutModes {\n    constructor() {\n        this.default = OutMode.out;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        this.bottom = data.bottom ?? data.default;\n        this.left = data.left ?? data.default;\n        this.right = data.right ?? data.default;\n        this.top = data.top ?? data.default;\n    }\n}\n", "import { deepExtend } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class Spin {\n    constructor() {\n        this.acceleration = 0;\n        this.enable = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.position) {\n            this.position = deepExtend({}, data.position);\n        }\n    }\n}\n", "import { MoveDirection } from \"../../../../Enums/Directions/MoveDirection.js\";\nimport { isNull, isNumber, isObject } from \"../../../../Utils/TypeUtils.js\";\nimport { MoveAngle } from \"./MoveAngle.js\";\nimport { MoveAttract } from \"./MoveAttract.js\";\nimport { MoveCenter } from \"./MoveCenter.js\";\nimport { MoveGravity } from \"./MoveGravity.js\";\nimport { MovePath } from \"./Path/MovePath.js\";\nimport { MoveTrail } from \"./MoveTrail.js\";\nimport { OutModes } from \"./OutModes.js\";\nimport { Spin } from \"./Spin.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new MoveAttract();\n        this.center = new MoveCenter();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = MoveDirection.none;\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new MovePath();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new MoveTrail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.angle.load(isNumber(data.angle) ? { value: data.angle } : data.angle);\n        this.attract.load(data.attract);\n        this.center.load(data.center);\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance = isNumber(data.distance)\n                ? {\n                    horizontal: data.distance,\n                    vertical: data.distance,\n                }\n                : { ...data.distance };\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outModes = data.outModes;\n        if (outModes !== undefined) {\n            if (isObject(outModes)) {\n                this.outModes.load(outModes);\n            }\n            else {\n                this.outModes.load({\n                    default: outModes,\n                });\n            }\n        }\n        this.path.load(data.path);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n", "import { DestroyType } from \"../../../../Enums/Types/DestroyType.js\";\nimport { RangedAnimationOptions } from \"../../AnimationOptions.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class OpacityAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = DestroyType.none;\n        this.speed = 2;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n", "import { OpacityAnimation } from \"./OpacityAnimation.js\";\nimport { RangedAnimationValueWithRandom } from \"../../ValueWithRandom.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Opacity extends RangedAnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new OpacityAnimation();\n        this.value = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        super.load(data);\n        const animation = data.animation;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\n", "import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesDensity {\n    constructor() {\n        this.enable = false;\n        this.width = 1920;\n        this.height = 1080;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const width = data.width;\n        if (width !== undefined) {\n            this.width = width;\n        }\n        const height = data.height;\n        if (height !== undefined) {\n            this.height = height;\n        }\n    }\n}\n", "export var LimitMode;\n(function (LimitMode) {\n    LimitMode[\"delete\"] = \"delete\";\n    LimitMode[\"wait\"] = \"wait\";\n})(LimitMode || (LimitMode = {}));\n", "import { LimitMode } from \"../../../../Enums/Modes/LimitMode.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesNumberLimit {\n    constructor() {\n        this.mode = LimitMode.delete;\n        this.value = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n", "import { ParticlesDensity } from \"./ParticlesDensity.js\";\nimport { ParticlesNumberLimit } from \"./ParticlesNumberLimit.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesNumber {\n    constructor() {\n        this.density = new ParticlesDensity();\n        this.limit = new ParticlesNumberLimit();\n        this.value = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.density.load(data.density);\n        this.limit.load(data.limit);\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n", "import { OptionsColor } from \"../OptionsColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new OptionsColor();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000\";\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset === undefined) {\n            return;\n        }\n        if (data.offset.x !== undefined) {\n            this.offset.x = data.offset.x;\n        }\n        if (data.offset.y !== undefined) {\n            this.offset.y = data.offset.y;\n        }\n    }\n}\n", "import { deepExtend } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Shape {\n    constructor() {\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = \"circle\";\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        const options = data.options;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.options[shape] = deepExtend(this.options[shape] ?? {}, item);\n                }\n            }\n        }\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n", "import { DestroyType } from \"../../../../Enums/Types/DestroyType.js\";\nimport { RangedAnimationOptions } from \"../../AnimationOptions.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class SizeAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = DestroyType.none;\n        this.speed = 5;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n", "import { RangedAnimationValueWithRandom } from \"../../ValueWithRandom.js\";\nimport { SizeAnimation } from \"./SizeAnimation.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Size extends RangedAnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new SizeAnimation();\n        this.value = 3;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        const animation = data.animation;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\n", "import { AnimatableColor } from \"../AnimatableColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../Utils/NumberUtils.js\";\nexport class Stroke {\n    constructor() {\n        this.width = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = AnimatableColor.create(this.color, data.color);\n        }\n        if (data.width !== undefined) {\n            this.width = setRangeValue(data.width);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n", "import { ValueWithRandom } from \"../../ValueWithRandom.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ZIndex extends ValueWithRandom {\n    constructor() {\n        super();\n        this.opacityRate = 1;\n        this.sizeRate = 1;\n        this.velocityRate = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.opacityRate !== undefined) {\n            this.opacityRate = data.opacityRate;\n        }\n        if (data.sizeRate !== undefined) {\n            this.sizeRate = data.sizeRate;\n        }\n        if (data.velocityRate !== undefined) {\n            this.velocityRate = data.velocityRate;\n        }\n    }\n}\n", "import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils.js\";\nimport { AnimatableColor } from \"../AnimatableColor.js\";\nimport { Collisions } from \"./Collisions/Collisions.js\";\nimport { Effect } from \"./Effect/Effect.js\";\nimport { Move } from \"./Move/Move.js\";\nimport { Opacity } from \"./Opacity/Opacity.js\";\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce.js\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber.js\";\nimport { Shadow } from \"./Shadow.js\";\nimport { Shape } from \"./Shape/Shape.js\";\nimport { Size } from \"./Size/Size.js\";\nimport { Stroke } from \"./Stroke.js\";\nimport { ZIndex } from \"./ZIndex/ZIndex.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class ParticlesOptions {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.bounce = new ParticlesBounce();\n        this.collisions = new Collisions();\n        this.color = new AnimatableColor();\n        this.color.value = \"#fff\";\n        this.effect = new Effect();\n        this.groups = {};\n        this.move = new Move();\n        this.number = new ParticlesNumber();\n        this.opacity = new Opacity();\n        this.reduceDuplicates = false;\n        this.shadow = new Shadow();\n        this.shape = new Shape();\n        this.size = new Size();\n        this.stroke = new Stroke();\n        this.zIndex = new ZIndex();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.groups !== undefined) {\n            for (const group of Object.keys(data.groups)) {\n                if (!Object.hasOwn(data.groups, group)) {\n                    continue;\n                }\n                const item = data.groups[group];\n                if (item !== undefined) {\n                    this.groups[group] = deepExtend(this.groups[group] ?? {}, item);\n                }\n            }\n        }\n        if (data.reduceDuplicates !== undefined) {\n            this.reduceDuplicates = data.reduceDuplicates;\n        }\n        this.bounce.load(data.bounce);\n        this.color.load(AnimatableColor.create(this.color, data.color));\n        this.effect.load(data.effect);\n        this.move.load(data.move);\n        this.number.load(data.number);\n        this.opacity.load(data.opacity);\n        this.shape.load(data.shape);\n        this.size.load(data.size);\n        this.shadow.load(data.shadow);\n        this.zIndex.load(data.zIndex);\n        this.collisions.load(data.collisions);\n        if (data.interactivity !== undefined) {\n            this.interactivity = deepExtend({}, data.interactivity);\n        }\n        const strokeToLoad = data.stroke;\n        if (strokeToLoad) {\n            this.stroke = executeOnSingleOrMultiple(strokeToLoad, t => {\n                const tmp = new Stroke();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (this._container) {\n            const updaters = this._engine.updaters.get(this._container);\n            if (updaters) {\n                for (const updater of updaters) {\n                    if (updater.loadOptions) {\n                        updater.loadOptions(this, data);\n                    }\n                }\n            }\n            const interactors = this._engine.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadParticlesOptions) {\n                        interactor.loadParticlesOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n", "import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions.js\";\nexport function loadOptions(options, ...sourceOptionsArr) {\n    for (const sourceOptions of sourceOptionsArr) {\n        options.load(sourceOptions);\n    }\n}\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\n    const options = new ParticlesOptions(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\n", "import { deepExtend, executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils.js\";\nimport { isBoolean, isNull } from \"../../Utils/TypeUtils.js\";\nimport { Background } from \"./Background/Background.js\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask.js\";\nimport { FullScreen } from \"./FullScreen/FullScreen.js\";\nimport { Interactivity } from \"./Interactivity/Interactivity.js\";\nimport { ManualParticle } from \"./ManualParticle.js\";\nimport { Responsive } from \"./Responsive.js\";\nimport { ResponsiveMode } from \"../../Enums/Modes/ResponsiveMode.js\";\nimport { Theme } from \"./Theme/Theme.js\";\nimport { ThemeMode } from \"../../Enums/Modes/ThemeMode.js\";\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class Options {\n    constructor(engine, container) {\n        this._findDefaultTheme = mode => {\n            return (this.themes.find(theme => theme.default.value && theme.default.mode === mode) ??\n                this.themes.find(theme => theme.default.value && theme.default.mode === ThemeMode.any));\n        };\n        this._importPreset = preset => {\n            this.load(this._engine.getPreset(preset));\n        };\n        this._engine = engine;\n        this._container = container;\n        this.autoPlay = true;\n        this.background = new Background();\n        this.backgroundMask = new BackgroundMask();\n        this.clear = true;\n        this.defaultThemes = {};\n        this.delay = 0;\n        this.fullScreen = new FullScreen();\n        this.detectRetina = true;\n        this.duration = 0;\n        this.fpsLimit = 120;\n        this.interactivity = new Interactivity(engine, container);\n        this.manualParticles = [];\n        this.particles = loadParticlesOptions(this._engine, this._container);\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = true;\n        this.responsive = [];\n        this.smooth = false;\n        this.style = {};\n        this.themes = [];\n        this.zLayers = 100;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            executeOnSingleOrMultiple(data.preset, preset => this._importPreset(preset));\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.clear !== undefined) {\n            this.clear = data.clear;\n        }\n        if (data.key !== undefined) {\n            this.key = data.key;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        const detectRetina = data.detectRetina;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        const fpsLimit = data.fpsLimit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        if (data.zLayers !== undefined) {\n            this.zLayers = data.zLayers;\n        }\n        this.background.load(data.background);\n        const fullScreen = data.fullScreen;\n        if (isBoolean(fullScreen)) {\n            this.fullScreen.enable = fullScreen;\n        }\n        else {\n            this.fullScreen.load(fullScreen);\n        }\n        this.backgroundMask.load(data.backgroundMask);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles) {\n            this.manualParticles = data.manualParticles.map(t => {\n                const tmp = new ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.particles.load(data.particles);\n        this.style = deepExtend(this.style, data.style);\n        this._engine.loadOptions(this, data);\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n        const interactors = this._engine.interactors.get(this._container);\n        if (interactors) {\n            for (const interactor of interactors) {\n                if (interactor.loadOptions) {\n                    interactor.loadOptions(this, data);\n                }\n            }\n        }\n        if (data.responsive !== undefined) {\n            for (const responsive of data.responsive) {\n                const optResponsive = new Responsive();\n                optResponsive.load(responsive);\n                this.responsive.push(optResponsive);\n            }\n        }\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const existingTheme = this.themes.find(t => t.name === theme.name);\n                if (!existingTheme) {\n                    const optTheme = new Theme();\n                    optTheme.load(theme);\n                    this.themes.push(optTheme);\n                }\n                else {\n                    existingTheme.load(theme);\n                }\n            }\n        }\n        this.defaultThemes.dark = this._findDefaultTheme(ThemeMode.dark)?.name;\n        this.defaultThemes.light = this._findDefaultTheme(ThemeMode.light)?.name;\n    }\n    setResponsive(width, pxRatio, defaultOptions) {\n        this.load(defaultOptions);\n        const responsiveOptions = this.responsive.find(t => t.mode === ResponsiveMode.screen && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);\n        this.load(responsiveOptions?.options);\n        return responsiveOptions?.maxWidth;\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find(theme => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\"), clientDarkMode = mediaMatch?.matches, defaultTheme = this._findDefaultTheme(clientDarkMode ? ThemeMode.dark : ThemeMode.light);\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n}\n", "export var InteractorType;\n(function (InteractorType) {\n    InteractorType[\"external\"] = \"external\";\n    InteractorType[\"particles\"] = \"particles\";\n})(InteractorType || (InteractorType = {}));\n", "import { InteractorType } from \"../../Enums/Types/InteractorType.js\";\nexport class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = [];\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                interactor.interact(delta);\n            }\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            interactor.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        this._interactors = await this._engine.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case InteractorType.external:\n                    this._externalInteractors.push(interactor);\n                    break;\n                case InteractorType.particles:\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                interactor.interact(particle, delta);\n            }\n        }\n    }\n    reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                interactor.reset(particle);\n            }\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                interactor.reset(particle);\n            }\n        }\n    }\n}\n", "export var ParticleOutType;\n(function (ParticleOutType) {\n    ParticleOutType[\"normal\"] = \"normal\";\n    ParticleOutType[\"inside\"] = \"inside\";\n    ParticleOutType[\"outside\"] = \"outside\";\n})(ParticleOutType || (ParticleOutType = {}));\n", "import { Vector, Vector3d } from \"./Utils/Vectors.js\";\nimport { calcExactPositionOrRandomFromSize, clamp, degToRad, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils.js\";\nimport { decayOffset, defaultRadius, defaultRetryCount, double, errorPrefix, half, millisecondsToSeconds, minRetries, minZ, none, randomColorValue, rollFactor, squareExp, tryCountIncrement, } from \"./Utils/Constants.js\";\nimport { deepExtend, getPosition, initParticleNumericAnimationValue, isInArray, itemFromSingleOrMultiple, } from \"../Utils/Utils.js\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity.js\";\nimport { MoveDirection } from \"../Enums/Directions/MoveDirection.js\";\nimport { OutMode } from \"../Enums/Modes/OutMode.js\";\nimport { ParticleOutType } from \"../Enums/Types/ParticleOutType.js\";\nimport { PixelMode } from \"../Enums/Modes/PixelMode.js\";\nimport { alterHsl } from \"../Utils/CanvasUtils.js\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils.js\";\nfunction loadEffectData(effect, effectOptions, id, reduceDuplicates) {\n    const effectData = effectOptions.options[effect];\n    if (!effectData) {\n        return;\n    }\n    return deepExtend({\n        close: effectOptions.close,\n        fill: effectOptions.fill,\n    }, itemFromSingleOrMultiple(effectData, id, reduceDuplicates));\n}\nfunction loadShapeData(shape, shapeOptions, id, reduceDuplicates) {\n    const shapeData = shapeOptions.options[shape];\n    if (!shapeData) {\n        return;\n    }\n    return deepExtend({\n        close: shapeOptions.close,\n        fill: shapeOptions.fill,\n    }, itemFromSingleOrMultiple(shapeData, id, reduceDuplicates));\n}\nfunction fixOutMode(data) {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    const diameter = data.radius * double;\n    if (data.coord > data.maxCoord - diameter) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < diameter) {\n        data.setCb(data.radius);\n    }\n}\nexport class Particle {\n    constructor(engine, container) {\n        this.container = container;\n        this._calcPosition = (container, position, zIndex, tryCount = defaultRetryCount) => {\n            for (const plugin of container.plugins.values()) {\n                const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n                if (pluginPos) {\n                    return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n                }\n            }\n            const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n                size: canvasSize,\n                position: position,\n            }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [OutMode.bounce],\n                    coord: pos.x,\n                    maxCoord: container.canvas.size.width,\n                    setCb: (value) => (pos.x += value),\n                    radius,\n                });\n            }, fixVertical = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [OutMode.bounce],\n                    coord: pos.y,\n                    maxCoord: container.canvas.size.height,\n                    setCb: (value) => (pos.y += value),\n                    radius,\n                });\n            };\n            fixHorizontal(outModes.left ?? outModes.default);\n            fixHorizontal(outModes.right ?? outModes.default);\n            fixVertical(outModes.top ?? outModes.default);\n            fixVertical(outModes.bottom ?? outModes.default);\n            if (this._checkOverlap(pos, tryCount)) {\n                return this._calcPosition(container, undefined, zIndex, tryCount + tryCountIncrement);\n            }\n            return pos;\n        };\n        this._calculateVelocity = () => {\n            const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n            if (moveOptions.direction === MoveDirection.inside || moveOptions.direction === MoveDirection.outside) {\n                return res;\n            }\n            const rad = degToRad(getRangeValue(moveOptions.angle.value)), radOffset = degToRad(getRangeValue(moveOptions.angle.offset)), range = {\n                left: radOffset - rad * half,\n                right: radOffset + rad * half,\n            };\n            if (!moveOptions.straight) {\n                res.angle += randomInRange(setRangeValue(range.left, range.right));\n            }\n            if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n                res.length *= getRandom();\n            }\n            return res;\n        };\n        this._checkOverlap = (pos, tryCount = defaultRetryCount) => {\n            const collisionsOptions = this.options.collisions, radius = this.getRadius();\n            if (!collisionsOptions.enable) {\n                return false;\n            }\n            const overlapOptions = collisionsOptions.overlap;\n            if (overlapOptions.enable) {\n                return false;\n            }\n            const retries = overlapOptions.retries;\n            if (retries >= minRetries && tryCount > retries) {\n                throw new Error(`${errorPrefix} particle is overlapping and can't be placed`);\n            }\n            return !!this.container.particles.find(particle => getDistance(pos, particle.position) < radius + particle.getRadius());\n        };\n        this._getRollColor = color => {\n            if (!color || !this.roll || (!this.backColor && !this.roll.alter)) {\n                return color;\n            }\n            const backFactor = this.roll.horizontal && this.roll.vertical ? double * rollFactor : rollFactor, backSum = this.roll.horizontal ? Math.PI * half : none, rolled = Math.floor(((this.roll.angle ?? none) + backSum) / (Math.PI / backFactor)) % double;\n            if (!rolled) {\n                return color;\n            }\n            if (this.backColor) {\n                return this.backColor;\n            }\n            if (this.roll.alter) {\n                return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n            }\n            return color;\n        };\n        this._initPosition = position => {\n            const container = this.container, zIndexValue = getRangeValue(this.options.zIndex.value);\n            this.position = this._calcPosition(container, position, clamp(zIndexValue, minZ, container.zLayers));\n            this.initialPosition = this.position.copy();\n            const canvasSize = container.canvas.size;\n            this.moveCenter = {\n                ...getPosition(this.options.move.center, canvasSize),\n                radius: this.options.move.center.radius ?? defaultRadius,\n                mode: this.options.move.center.mode ?? PixelMode.percent,\n            };\n            this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n            switch (this.options.move.direction) {\n                case MoveDirection.inside:\n                    this.outType = ParticleOutType.inside;\n                    break;\n                case MoveDirection.outside:\n                    this.outType = ParticleOutType.outside;\n                    break;\n            }\n            this.offset = Vector.origin;\n        };\n        this._engine = engine;\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        const container = this.container, pathGenerator = this.pathGenerator, shapeDrawer = container.shapeDrawers.get(this.shape);\n        shapeDrawer?.particleDestroy?.(this);\n        for (const plugin of container.plugins.values()) {\n            plugin.particleDestroyed?.(this, override);\n        }\n        for (const updater of container.particles.updaters) {\n            updater.particleDestroyed?.(this, override);\n        }\n        pathGenerator?.reset(this);\n        this._engine.dispatchEvent(EventType.particleDestroyed, {\n            container: this.container,\n            data: {\n                particle: this,\n            },\n        });\n    }\n    draw(delta) {\n        const container = this.container, canvas = container.canvas;\n        for (const plugin of container.plugins.values()) {\n            canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.color));\n    }\n    getMass() {\n        return this.getRadius() ** squareExp * Math.PI * half;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        return this.bubble.radius ?? this.size.value;\n    }\n    getStrokeColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.strokeColor));\n    }\n    init(id, position, overrideOptions, group) {\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.effectClose = true;\n        this.effectFill = true;\n        this.shapeClose = true;\n        this.shapeFill = true;\n        this.pathRotation = false;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.isRotating = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = ParticleOutType.normal;\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), { reduceDuplicates } = particlesOptions, effectType = particlesOptions.effect.type, shapeType = particlesOptions.shape.type;\n        this.effect = itemFromSingleOrMultiple(effectType, this.id, reduceDuplicates);\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const effectOptions = particlesOptions.effect, shapeOptions = particlesOptions.shape;\n        if (overrideOptions) {\n            if (overrideOptions.effect?.type) {\n                const overrideEffectType = overrideOptions.effect.type, effect = itemFromSingleOrMultiple(overrideEffectType, this.id, reduceDuplicates);\n                if (effect) {\n                    this.effect = effect;\n                    effectOptions.load(overrideOptions.effect);\n                }\n            }\n            if (overrideOptions.shape?.type) {\n                const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n                if (shape) {\n                    this.shape = shape;\n                    shapeOptions.load(overrideOptions.shape);\n                }\n            }\n        }\n        if (this.effect === randomColorValue) {\n            const availableEffects = [...this.container.effectDrawers.keys()];\n            this.effect = availableEffects[Math.floor(Math.random() * availableEffects.length)];\n        }\n        if (this.shape === randomColorValue) {\n            const availableShapes = [...this.container.shapeDrawers.keys()];\n            this.shape = availableShapes[Math.floor(Math.random() * availableShapes.length)];\n        }\n        this.effectData = loadEffectData(this.effect, effectOptions, this.id, reduceDuplicates);\n        this.shapeData = loadShapeData(this.shape, shapeOptions, this.id, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        const effectData = this.effectData;\n        if (effectData) {\n            particlesOptions.load(effectData.particles);\n        }\n        const shapeData = this.shapeData;\n        if (shapeData) {\n            particlesOptions.load(shapeData.particles);\n        }\n        const interactivity = new Interactivity(engine, container);\n        interactivity.load(container.actualOptions.interactivity);\n        interactivity.load(particlesOptions.interactivity);\n        this.interactivity = interactivity;\n        this.effectFill = effectData?.fill ?? particlesOptions.effect.fill;\n        this.effectClose = effectData?.close ?? particlesOptions.effect.close;\n        this.shapeFill = shapeData?.fill ?? particlesOptions.shape.fill;\n        this.shapeClose = shapeData?.close ?? particlesOptions.shape.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getRangeValue(pathOptions.delay.value) * millisecondsToSeconds;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        container.retina.initParticle(this);\n        this.size = initParticleNumericAnimationValue(this.options.size, pxRatio);\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this._initPosition(position);\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = decayOffset - getRangeValue(this.options.move.decay);\n        const particles = container.particles;\n        particles.setLastZIndex(this.position.z);\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let effectDrawer = container.effectDrawers.get(this.effect);\n        if (!effectDrawer) {\n            effectDrawer = this._engine.getEffectDrawer(this.effect);\n            if (effectDrawer) {\n                container.effectDrawers.set(this.effect, effectDrawer);\n            }\n        }\n        if (effectDrawer?.loadEffect) {\n            effectDrawer.loadEffect(this);\n        }\n        let shapeDrawer = container.shapeDrawers.get(this.shape);\n        if (!shapeDrawer) {\n            shapeDrawer = this._engine.getShapeDrawer(this.shape);\n            if (shapeDrawer) {\n                container.shapeDrawers.set(this.shape, shapeDrawer);\n            }\n        }\n        if (shapeDrawer?.loadShape) {\n            shapeDrawer.loadShape(this);\n        }\n        const sideCountFunc = shapeDrawer?.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this._engine, this.options.shadow.color);\n        for (const updater of particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of particles.movers) {\n            mover.init?.(this);\n        }\n        effectDrawer?.particleInit?.(container, this);\n        shapeDrawer?.particleInit?.(container, this);\n        for (const plugin of container.plugins.values()) {\n            plugin.particleCreated?.(this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size, position = this.position;\n        return (position.x >= -radius &&\n            position.y >= -radius &&\n            position.y <= canvasSize.height + radius &&\n            position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        for (const updater of this.container.particles.updaters) {\n            updater.reset?.(this);\n        }\n    }\n}\n", "export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n", "export var RangeType;\n(function (RangeType) {\n    RangeType[\"circle\"] = \"circle\";\n    RangeType[\"rectangle\"] = \"rectangle\";\n})(RangeType || (RangeType = {}));\n", "import { RangeType } from \"../../Types/RangeType.js\";\nimport { getDistance } from \"../../Utils/NumberUtils.js\";\nimport { squareExp } from \"./Constants.js\";\nexport class BaseRange {\n    constructor(x, y, type) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n        this.type = type;\n    }\n}\nexport class Circle extends BaseRange {\n    constructor(x, y, radius) {\n        super(x, y, RangeType.circle);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) <= this.radius;\n    }\n    intersects(range) {\n        const pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\n        if (range instanceof Circle || range.type === RangeType.circle) {\n            const circleRange = range, rSum = r + circleRange.radius, dist = Math.sqrt(distPos.x ** squareExp + distPos.y ** squareExp);\n            return rSum > dist;\n        }\n        else if (range instanceof Rectangle || range.type === RangeType.rectangle) {\n            const rectRange = range, { width, height } = rectRange.size, edges = Math.pow(distPos.x - width, squareExp) + Math.pow(distPos.y - height, squareExp);\n            return (edges <= r ** squareExp ||\n                (distPos.x <= r + width && distPos.y <= r + height) ||\n                distPos.x <= width ||\n                distPos.y <= height);\n        }\n        return false;\n    }\n}\nexport class Rectangle extends BaseRange {\n    constructor(x, y, width, height) {\n        super(x, y, RangeType.rectangle);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width, h = this.size.height, pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        if (range instanceof Circle) {\n            return range.intersects(this);\n        }\n        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : { width: 0, height: 0 }, w2 = size2.width, h2 = size2.height;\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n    }\n}\n", "import { Circle, Rectangle } from \"./Ranges.js\";\nimport { double, half, subdivideCount } from \"./Constants.js\";\nimport { getDistance } from \"../../Utils/NumberUtils.js\";\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._subdivide = () => {\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\n            for (let i = 0; i < subdivideCount; i++) {\n                const fixedIndex = i % double;\n                this._subs.push(new QuadTree(new Rectangle(x + width * half * fixedIndex, y + height * half * (Math.round(i * half) - fixedIndex), width * half, height * half), capacity));\n            }\n            this._divided = true;\n        };\n        this._points = [];\n        this._divided = false;\n        this._subs = [];\n    }\n    insert(point) {\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this._subdivide();\n        }\n        return this._subs.some(sub => sub.insert(point));\n    }\n    query(range, check) {\n        const res = [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            for (const sub of this._subs) {\n                res.push(...sub.query(range, check));\n            }\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n}\n", "import { countOffset, defaultDensityFactor, defaultRemoveQuantity, deleteCount, errorPrefix, lengthOffset, manualCount, minCount, minIndex, minLimit, posOffset, qTreeCapacity, sizeFactor, squareExp, } from \"./Utils/Constants.js\";\nimport { getLogger, getPosition } from \"../Utils/Utils.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { InteractionManager } from \"./Utils/InteractionManager.js\";\nimport { LimitMode } from \"../Enums/Modes/LimitMode.js\";\nimport { Particle } from \"./Particle.js\";\nimport { Point } from \"./Utils/Point.js\";\nimport { QuadTree } from \"./Utils/QuadTree.js\";\nimport { Rectangle } from \"./Utils/Ranges.js\";\nconst qTreeRectangle = (canvasSize) => {\n    const { height, width } = canvasSize;\n    return new Rectangle(posOffset * width, posOffset * height, sizeFactor * width, sizeFactor * height);\n};\nexport class Particles {\n    constructor(engine, container) {\n        this._addToPool = (...particles) => {\n            this._pool.push(...particles);\n        };\n        this._applyDensity = (options, manualCount, group) => {\n            const numberOptions = options.number;\n            if (!options.number.density?.enable) {\n                if (group === undefined) {\n                    this._limit = numberOptions.limit.value;\n                }\n                else if (numberOptions.limit) {\n                    this._groupLimits.set(group, numberOptions.limit.value);\n                }\n                return;\n            }\n            const densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit.value > minLimit ? numberOptions.limit.value : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter(t => t.group === group).length);\n            if (group === undefined) {\n                this._limit = numberOptions.limit.value * densityFactor;\n            }\n            else {\n                this._groupLimits.set(group, numberOptions.limit.value * densityFactor);\n            }\n            if (particlesCount < particlesNumber) {\n                this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n            }\n            else if (particlesCount > particlesNumber) {\n                this.removeQuantity(particlesCount - particlesNumber, group);\n            }\n        };\n        this._initDensityFactor = densityOptions => {\n            const container = this._container;\n            if (!container.canvas.element || !densityOptions.enable) {\n                return defaultDensityFactor;\n            }\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n            return (canvas.width * canvas.height) / (densityOptions.height * densityOptions.width * pxRatio ** squareExp);\n        };\n        this._pushParticle = (position, overrideOptions, group, initializer) => {\n            try {\n                let particle = this._pool.pop();\n                if (!particle) {\n                    particle = new Particle(this._engine, this._container);\n                }\n                particle.init(this._nextId, position, overrideOptions, group);\n                let canAdd = true;\n                if (initializer) {\n                    canAdd = initializer(particle);\n                }\n                if (!canAdd) {\n                    return;\n                }\n                this._array.push(particle);\n                this._zArray.push(particle);\n                this._nextId++;\n                this._engine.dispatchEvent(EventType.particleAdded, {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n                return particle;\n            }\n            catch (e) {\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n            }\n        };\n        this._removeParticle = (index, group, override) => {\n            const particle = this._array[index];\n            if (!particle || particle.group !== group) {\n                return false;\n            }\n            const zIdx = this._zArray.indexOf(particle);\n            this._array.splice(index, deleteCount);\n            this._zArray.splice(zIdx, deleteCount);\n            particle.destroy(override);\n            this._engine.dispatchEvent(EventType.particleRemoved, {\n                container: this._container,\n                data: {\n                    particle,\n                },\n            });\n            this._addToPool(particle);\n            return true;\n        };\n        this._engine = engine;\n        this._container = container;\n        this._nextId = 0;\n        this._array = [];\n        this._zArray = [];\n        this._pool = [];\n        this._limit = 0;\n        this._groupLimits = new Map();\n        this._needsSort = false;\n        this._lastZIndex = 0;\n        this._interactionManager = new InteractionManager(engine, container);\n        this._pluginsInitialized = false;\n        const canvasSize = container.canvas.size;\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n        this.movers = [];\n        this.updaters = [];\n    }\n    get count() {\n        return this._array.length;\n    }\n    addManualParticles() {\n        const container = this._container, options = container.actualOptions;\n        options.manualParticles.forEach(p => this.addParticle(p.position ? getPosition(p.position, container.canvas.size) : undefined, p.options));\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const limitMode = this._container.actualOptions.particles.number.limit.mode, limit = group === undefined ? this._limit : (this._groupLimits.get(group) ?? this._limit), currentCount = this.count;\n        if (limit > minLimit) {\n            switch (limitMode) {\n                case LimitMode.delete: {\n                    const countToRemove = currentCount + countOffset - limit;\n                    if (countToRemove > minCount) {\n                        this.removeQuantity(countToRemove);\n                    }\n                    break;\n                }\n                case LimitMode.wait:\n                    if (currentCount >= limit) {\n                        return;\n                    }\n                    break;\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this._array = [];\n        this._zArray = [];\n        this._pluginsInitialized = false;\n    }\n    destroy() {\n        this._array = [];\n        this._zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    draw(delta) {\n        const container = this._container, canvas = container.canvas;\n        canvas.clear();\n        this.update(delta);\n        for (const plugin of container.plugins.values()) {\n            canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this._zArray) {\n            p.draw(delta);\n        }\n    }\n    filter(condition) {\n        return this._array.filter(condition);\n    }\n    find(condition) {\n        return this._array.find(condition);\n    }\n    get(index) {\n        return this._array[index];\n    }\n    handleClickMode(mode) {\n        this._interactionManager.handleClickMode(mode);\n    }\n    async init() {\n        const container = this._container, options = container.actualOptions;\n        this._lastZIndex = 0;\n        this._needsSort = false;\n        await this.initPlugins();\n        let handled = false;\n        for (const plugin of container.plugins.values()) {\n            handled = plugin.particlesInitialization?.() ?? handled;\n            if (handled) {\n                break;\n            }\n        }\n        this.addManualParticles();\n        if (!handled) {\n            const particlesOptions = options.particles, groups = particlesOptions.groups;\n            for (const group in groups) {\n                const groupOptions = groups[group];\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < particlesOptions.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < particlesOptions.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    async initPlugins() {\n        if (this._pluginsInitialized) {\n            return;\n        }\n        const container = this._container;\n        this.movers = await this._engine.getMovers(container, true);\n        this.updaters = await this._engine.getUpdaters(container, true);\n        await this._interactionManager.init();\n        for (const pathGenerator of container.pathGenerators.values()) {\n            pathGenerator.init(container);\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse?.position, overrideOptions, group);\n        }\n    }\n    async redraw() {\n        this.clear();\n        await this.init();\n        this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = defaultRemoveQuantity, group, override) {\n        if (index < minIndex || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            if (this._removeParticle(i, group, override)) {\n                i--;\n                deleted++;\n            }\n        }\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(minIndex, quantity, group);\n    }\n    setDensity() {\n        const options = this._container.actualOptions, groups = options.particles.groups;\n        for (const group in groups) {\n            this._applyDensity(groups[group], manualCount, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    setLastZIndex(zIndex) {\n        this._lastZIndex = zIndex;\n        this._needsSort = this._needsSort || this._lastZIndex < zIndex;\n    }\n    setResizeFactor(factor) {\n        this._resizeFactor = factor;\n    }\n    update(delta) {\n        const container = this._container, particlesToDelete = new Set();\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n        for (const pathGenerator of container.pathGenerators.values()) {\n            pathGenerator.update();\n        }\n        for (const plugin of container.plugins.values()) {\n            plugin.update?.(delta);\n        }\n        const resizeFactor = this._resizeFactor;\n        for (const particle of this._array) {\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            this._interactionManager.reset(particle);\n            for (const plugin of this._container.plugins.values()) {\n                if (particle.destroyed) {\n                    break;\n                }\n                plugin.particleUpdate?.(particle, delta);\n            }\n            for (const mover of this.movers) {\n                if (mover.isEnabled(particle)) {\n                    mover.move(particle, delta);\n                }\n            }\n            if (particle.destroyed) {\n                particlesToDelete.add(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        if (particlesToDelete.size) {\n            const checkDelete = (p) => !particlesToDelete.has(p);\n            this._array = this.filter(checkDelete);\n            this._zArray = this._zArray.filter(checkDelete);\n            for (const particle of particlesToDelete) {\n                this._engine.dispatchEvent(EventType.particleRemoved, {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n            }\n            this._addToPool(...particlesToDelete);\n        }\n        this._interactionManager.externalInteract(delta);\n        for (const particle of this._array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                this._interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete this._resizeFactor;\n        if (this._needsSort) {\n            const zArray = this._zArray;\n            zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this._lastZIndex = zArray[zArray.length - lengthOffset].position.z;\n            this._needsSort = false;\n        }\n    }\n}\n", "import { defaultRatio, defaultReduceFactor } from \"./Utils/Constants.js\";\nimport { getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { isSsr } from \"../Utils/Utils.js\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n        this.pixelRatio = defaultRatio;\n        this.reduceFactor = defaultReduceFactor;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? defaultRatio : window.devicePixelRatio;\n        this.reduceFactor = defaultReduceFactor;\n        const ratio = this.pixelRatio, canvas = container.canvas;\n        if (canvas.element) {\n            const element = canvas.element;\n            canvas.size.width = element.offsetWidth * ratio;\n            canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles, moveOptions = particles.move;\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    }\n}\n", "import { animate, cancelAnimation, getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { clickRadius, defaultFps, defaultFpsLimit, errorPrefix, millisecondsToSeconds, minCoordinate, minFpsLimit, removeDeleteCount, removeMinIndex, touchEndLengthOffset, } from \"./Utils/Constants.js\";\nimport { getLogger, safeIntersectionObserver } from \"../Utils/Utils.js\";\nimport { Canvas } from \"./Canvas.js\";\nimport { EventListeners } from \"./Utils/EventListeners.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { Options } from \"../Options/Classes/Options.js\";\nimport { Particles } from \"./Particles.js\";\nimport { Retina } from \"./Retina.js\";\nimport { loadOptions } from \"../Utils/OptionsUtils.js\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction initDelta(value, fpsLimit = defaultFps, smooth = false) {\n    return {\n        value,\n        factor: smooth ? defaultFps / fpsLimit : (defaultFps * value) / millisecondsToSeconds,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this._intersectionManager = entries => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                if (entry.isIntersecting) {\n                    void this.play();\n                }\n                else {\n                    this.pause();\n                }\n            }\n        };\n        this._nextFrame = (timestamp) => {\n            try {\n                if (!this._smooth &&\n                    this._lastFrameTime !== undefined &&\n                    timestamp < this._lastFrameTime + millisecondsToSeconds / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this._lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this._lastFrameTime, this.fpsLimit, this._smooth);\n                this.addLifeTime(delta.value);\n                this._lastFrameTime = timestamp;\n                if (delta.value > millisecondsToSeconds) {\n                    this.draw(false);\n                    return;\n                }\n                this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.animationStatus) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.id = Symbol(id);\n        this.fpsLimit = 120;\n        this._smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this._lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._clickHandlers = new Map();\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this, this._engine);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.effectDrawers = new Map();\n        this.shapeDrawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        this._intersectionObserver = safeIntersectionObserver(entries => this._intersectionManager(entries));\n        this._engine.dispatchEvent(EventType.containerBuilt, { container: this });\n    }\n    get animationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        }, clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, clickRadius);\n        }, touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        }, touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        }, touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - touchEndLengthOffset];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - touchEndLengthOffset];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : minCoordinate),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : minCoordinate),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        }, touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        this._clickHandlers.set(\"click\", clickHandler);\n        this._clickHandlers.set(\"touchstart\", touchStartHandler);\n        this._clickHandlers.set(\"touchmove\", touchMoveHandler);\n        this._clickHandlers.set(\"touchend\", touchEndHandler);\n        this._clickHandlers.set(\"touchcancel\", touchCancelHandler);\n        for (const [key, handler] of this._clickHandlers) {\n            el.addEventListener(key, handler);\n        }\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    clearClickHandlers() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        for (const [key, handler] of this._clickHandlers) {\n            this.interactivity.element?.removeEventListener(key, handler);\n        }\n        this._clickHandlers.clear();\n    }\n    destroy(remove = true) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.clearClickHandlers();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const effectDrawer of this.effectDrawers.values()) {\n            effectDrawer.destroy?.(this);\n        }\n        for (const shapeDrawer of this.shapeDrawers.values()) {\n            shapeDrawer.destroy?.(this);\n        }\n        for (const key of this.effectDrawers.keys()) {\n            this.effectDrawers.delete(key);\n        }\n        for (const key of this.shapeDrawers.keys()) {\n            this.shapeDrawers.delete(key);\n        }\n        this._engine.clearPlugins(this);\n        this.destroyed = true;\n        if (remove) {\n            const mainArr = this._engine.items, idx = mainArr.findIndex(t => t === this);\n            if (idx >= removeMinIndex) {\n                mainArr.splice(idx, removeDeleteCount);\n            }\n        }\n        this._engine.dispatchEvent(EventType.containerDestroyed, { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        const frame = (timestamp) => {\n            if (refreshTime) {\n                this._lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            this._nextFrame(timestamp);\n        };\n        this._drawAnimationFrame = animate(timestamp => frame(timestamp));\n    }\n    async export(type, options = {}) {\n        for (const plugin of this.plugins.values()) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const plugin of this.plugins.values()) {\n            plugin.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const effects = this._engine.getSupportedEffects();\n        for (const type of effects) {\n            const drawer = this._engine.getEffectDrawer(type);\n            if (drawer) {\n                this.effectDrawers.set(type, drawer);\n            }\n        }\n        const shapes = this._engine.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.getShapeDrawer(type);\n            if (drawer) {\n                this.shapeDrawers.set(type, drawer);\n            }\n        }\n        await this.particles.initPlugins();\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = await this._engine.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        const { zLayers, duration, delay, fpsLimit, smooth } = this.actualOptions;\n        this.zLayers = zLayers;\n        this._duration = getRangeValue(duration) * millisecondsToSeconds;\n        this._delay = getRangeValue(delay) * millisecondsToSeconds;\n        this._lifeTime = 0;\n        this.fpsLimit = fpsLimit > minFpsLimit ? fpsLimit : defaultFpsLimit;\n        this._smooth = smooth;\n        for (const drawer of this.effectDrawers.values()) {\n            await drawer.init?.(this);\n        }\n        for (const drawer of this.shapeDrawers.values()) {\n            await drawer.init?.(this);\n        }\n        for (const plugin of this.plugins.values()) {\n            await plugin.init?.();\n        }\n        this._engine.dispatchEvent(EventType.containerInit, { container: this });\n        await this.particles.init();\n        this.particles.setDensity();\n        for (const plugin of this.plugins.values()) {\n            plugin.particlesSetup?.();\n        }\n        this._engine.dispatchEvent(EventType.particlesSetup, { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimation(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const plugin of this.plugins.values()) {\n            plugin.pause?.();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(EventType.containerPaused, { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const plugin of this.plugins.values()) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(EventType.containerPlay, { container: this });\n        this.draw(needsUpdate ?? false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset(sourceOptions) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = sourceOptions;\n        this._sourceOptions = sourceOptions;\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise(resolve => {\n            const start = async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const plugin of this.plugins.values()) {\n                    await plugin.start?.();\n                }\n                this._engine.dispatchEvent(EventType.containerStarted, { container: this });\n                this.play();\n                resolve();\n            };\n            this._delayTimeout = setTimeout(() => void start(), this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const plugin of this.plugins.values()) {\n            plugin.stop?.();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(EventType.containerStopped, { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this._responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this._responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n", "import { deleteCount, minIndex } from \"../Core/Utils/Constants.js\";\nexport class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        this.removeEventListener(type, listener);\n        let arr = this._listeners.get(type);\n        if (!arr) {\n            arr = [];\n            this._listeners.set(type, arr);\n        }\n        arr.push(listener);\n    }\n    dispatchEvent(type, args) {\n        const listeners = this._listeners.get(type);\n        listeners?.forEach(handler => handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener);\n        if (idx < minIndex) {\n            return;\n        }\n        if (length === deleteCount) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, deleteCount);\n        }\n    }\n}\n", "import { canvasFirstIndex, canvasTag, errorPrefix, generatedAttribute, generatedFalse, generatedTrue, loadMinIndex, loadRandomFactor, none, one, removeDeleteCount, } from \"./Utils/Constants.js\";\nimport { executeOnSingleOrMultiple, getLogger, itemFromSingleOrMultiple } from \"../Utils/Utils.js\";\nimport { Container } from \"./Container.js\";\nimport { EventDispatcher } from \"../Utils/EventDispatcher.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { getRandom } from \"../Utils/NumberUtils.js\";\nasync function getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = await Promise.all([...initializers.values()].map(t => t(container)));\n        map.set(container, res);\n    }\n    return res;\n}\nasync function getDataFromUrl(data) {\n    const url = itemFromSingleOrMultiple(data.url, data.index);\n    if (!url) {\n        return data.fallback;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return (await response.json());\n    }\n    getLogger().error(`${errorPrefix} ${response.status} while retrieving config file`);\n    return data.fallback;\n}\nconst getCanvasFromContainer = (domContainer) => {\n    let canvasEl;\n    if (domContainer instanceof HTMLCanvasElement || domContainer.tagName.toLowerCase() === canvasTag) {\n        canvasEl = domContainer;\n        if (!canvasEl.dataset[generatedAttribute]) {\n            canvasEl.dataset[generatedAttribute] = generatedFalse;\n        }\n    }\n    else {\n        const existingCanvases = domContainer.getElementsByTagName(canvasTag);\n        if (existingCanvases.length) {\n            canvasEl = existingCanvases[canvasFirstIndex];\n            canvasEl.dataset[generatedAttribute] = generatedFalse;\n        }\n        else {\n            canvasEl = document.createElement(canvasTag);\n            canvasEl.dataset[generatedAttribute] = generatedTrue;\n            domContainer.appendChild(canvasEl);\n        }\n    }\n    const fullPercent = \"100%\";\n    if (!canvasEl.style.width) {\n        canvasEl.style.width = fullPercent;\n    }\n    if (!canvasEl.style.height) {\n        canvasEl.style.height = fullPercent;\n    }\n    return canvasEl;\n}, getDomContainer = (id, source) => {\n    let domContainer = source ?? document.getElementById(id);\n    if (domContainer) {\n        return domContainer;\n    }\n    domContainer = document.createElement(\"div\");\n    domContainer.id = id;\n    domContainer.dataset[generatedAttribute] = generatedTrue;\n    document.body.append(domContainer);\n    return domContainer;\n};\nexport class Engine {\n    constructor() {\n        this._configs = new Map();\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this.plugins = [];\n        this.colorManagers = new Map();\n        this.easingFunctions = new Map();\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.effectDrawers = new Map();\n        this.shapeDrawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    get configs() {\n        const res = {};\n        for (const [name, config] of this._configs) {\n            res[name] = config;\n        }\n        return res;\n    }\n    get items() {\n        return this._domArray;\n    }\n    get version() {\n        return \"3.8.1\";\n    }\n    async addColorManager(manager, refresh = true) {\n        this.colorManagers.set(manager.key, manager);\n        await this.refresh(refresh);\n    }\n    addConfig(config) {\n        const key = config.key ?? config.name ?? \"default\";\n        this._configs.set(key, config);\n        this._eventDispatcher.dispatchEvent(EventType.configAdded, { data: { name: key, config } });\n    }\n    async addEasing(name, easing, refresh = true) {\n        if (this.getEasing(name)) {\n            return;\n        }\n        this.easingFunctions.set(name, easing);\n        await this.refresh(refresh);\n    }\n    async addEffect(effect, drawer, refresh = true) {\n        executeOnSingleOrMultiple(effect, type => {\n            if (!this.getEffectDrawer(type)) {\n                this.effectDrawers.set(type, drawer);\n            }\n        });\n        await this.refresh(refresh);\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer, refresh = true) {\n        this._initializers.interactors.set(name, interactorInitializer);\n        await this.refresh(refresh);\n    }\n    async addMover(name, moverInitializer, refresh = true) {\n        this._initializers.movers.set(name, moverInitializer);\n        await this.refresh(refresh);\n    }\n    async addParticleUpdater(name, updaterInitializer, refresh = true) {\n        this._initializers.updaters.set(name, updaterInitializer);\n        await this.refresh(refresh);\n    }\n    async addPathGenerator(name, generator, refresh = true) {\n        if (!this.getPathGenerator(name)) {\n            this.pathGenerators.set(name, generator);\n        }\n        await this.refresh(refresh);\n    }\n    async addPlugin(plugin, refresh = true) {\n        if (!this.getPlugin(plugin.id)) {\n            this.plugins.push(plugin);\n        }\n        await this.refresh(refresh);\n    }\n    async addPreset(preset, options, override = false, refresh = true) {\n        if (override || !this.getPreset(preset)) {\n            this.presets.set(preset, options);\n        }\n        await this.refresh(refresh);\n    }\n    async addShape(drawer, refresh = true) {\n        for (const validType of drawer.validTypes) {\n            if (this.getShapeDrawer(validType)) {\n                continue;\n            }\n            this.shapeDrawers.set(validType, drawer);\n        }\n        await this.refresh(refresh);\n    }\n    checkVersion(pluginVersion) {\n        if (this.version === pluginVersion) {\n            return;\n        }\n        throw new Error(`The tsParticles version is different from the loaded plugins version. Engine version: ${this.version}. Plugin version: ${pluginVersion}`);\n    }\n    clearPlugins(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this.items;\n    }\n    domItem(index) {\n        return this.item(index);\n    }\n    async getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            if (plugin.needsPlugin(container.actualOptions)) {\n                res.set(plugin.id, await plugin.getPlugin(container));\n            }\n        }\n        return res;\n    }\n    getEasing(name) {\n        return this.easingFunctions.get(name) ?? ((value) => value);\n    }\n    getEffectDrawer(type) {\n        return this.effectDrawers.get(type);\n    }\n    async getInteractors(container, force = false) {\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    async getMovers(container, force = false) {\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find(t => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.shapeDrawers.get(type);\n    }\n    getSupportedEffects() {\n        return this.effectDrawers.keys();\n    }\n    getSupportedShapes() {\n        return this.shapeDrawers.keys();\n    }\n    async getUpdaters(container, force = false) {\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    init() {\n        if (this._initialized) {\n            return;\n        }\n        this._initialized = true;\n    }\n    item(index) {\n        const { items } = this, item = items[index];\n        if (!item || item.destroyed) {\n            items.splice(index, removeDeleteCount);\n            return;\n        }\n        return item;\n    }\n    async load(params) {\n        const id = params.id ?? params.element?.id ?? `tsparticles${Math.floor(getRandom() * loadRandomFactor)}`, { index, url } = params, options = url ? await getDataFromUrl({ fallback: params.options, url, index }) : params.options;\n        const currentOptions = itemFromSingleOrMultiple(options, index), { items } = this, oldIndex = items.findIndex(v => v.id.description === id), newItem = new Container(this, id, currentOptions);\n        if (oldIndex >= loadMinIndex) {\n            const old = this.item(oldIndex), deleteCount = old ? one : none;\n            if (old && !old.destroyed) {\n                old.destroy(false);\n            }\n            items.splice(oldIndex, deleteCount, newItem);\n        }\n        else {\n            items.push(newItem);\n        }\n        const domContainer = getDomContainer(id, params.element), canvasEl = getCanvasFromContainer(domContainer);\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n    loadOptions(options, sourceOptions) {\n        this.plugins.forEach(plugin => plugin.loadOptions?.(options, sourceOptions));\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        updaters.forEach(updater => updater.loadOptions?.(options, ...sourceOptions));\n    }\n    async refresh(refresh = true) {\n        if (!refresh) {\n            return;\n        }\n        await Promise.all(this.items.map(t => t.refresh()));\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    setOnClickHandler(callback) {\n        const { items } = this;\n        if (!items.length) {\n            throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load()`);\n        }\n        items.forEach(item => item.addClickHandler(callback));\n    }\n}\n", "import { Engine } from \"./Core/Engine.js\";\nexport function init() {\n    const engine = new Engine();\n    engine.init();\n    return engine;\n}\n", "export var RotateDirection;\n(function (RotateDirection) {\n    RotateDirection[\"clockwise\"] = \"clockwise\";\n    RotateDirection[\"counterClockwise\"] = \"counter-clockwise\";\n    RotateDirection[\"random\"] = \"random\";\n})(RotateDirection || (RotateDirection = {}));\n", "export var GradientType;\n(function (GradientType) {\n    GradientType[\"linear\"] = \"linear\";\n    GradientType[\"radial\"] = \"radial\";\n    GradientType[\"random\"] = \"random\";\n})(GradientType || (GradientType = {}));\n", "export var EasingType;\n(function (EasingType) {\n    EasingType[\"easeInBack\"] = \"ease-in-back\";\n    EasingType[\"easeInCirc\"] = \"ease-in-circ\";\n    EasingType[\"easeInCubic\"] = \"ease-in-cubic\";\n    EasingType[\"easeInLinear\"] = \"ease-in-linear\";\n    EasingType[\"easeInQuad\"] = \"ease-in-quad\";\n    EasingType[\"easeInQuart\"] = \"ease-in-quart\";\n    EasingType[\"easeInQuint\"] = \"ease-in-quint\";\n    EasingType[\"easeInExpo\"] = \"ease-in-expo\";\n    EasingType[\"easeInSine\"] = \"ease-in-sine\";\n    EasingType[\"easeOutBack\"] = \"ease-out-back\";\n    EasingType[\"easeOutCirc\"] = \"ease-out-circ\";\n    EasingType[\"easeOutCubic\"] = \"ease-out-cubic\";\n    EasingType[\"easeOutLinear\"] = \"ease-out-linear\";\n    EasingType[\"easeOutQuad\"] = \"ease-out-quad\";\n    EasingType[\"easeOutQuart\"] = \"ease-out-quart\";\n    EasingType[\"easeOutQuint\"] = \"ease-out-quint\";\n    EasingType[\"easeOutExpo\"] = \"ease-out-expo\";\n    EasingType[\"easeOutSine\"] = \"ease-out-sine\";\n    EasingType[\"easeInOutBack\"] = \"ease-in-out-back\";\n    EasingType[\"easeInOutCirc\"] = \"ease-in-out-circ\";\n    EasingType[\"easeInOutCubic\"] = \"ease-in-out-cubic\";\n    EasingType[\"easeInOutLinear\"] = \"ease-in-out-linear\";\n    EasingType[\"easeInOutQuad\"] = \"ease-in-out-quad\";\n    EasingType[\"easeInOutQuart\"] = \"ease-in-out-quart\";\n    EasingType[\"easeInOutQuint\"] = \"ease-in-out-quint\";\n    EasingType[\"easeInOutExpo\"] = \"ease-in-out-expo\";\n    EasingType[\"easeInOutSine\"] = \"ease-in-out-sine\";\n})(EasingType || (EasingType = {}));\n", "import { init } from \"./init.js\";\nimport { isSsr } from \"./Utils/Utils.js\";\nconst tsParticles = init();\nif (!isSsr()) {\n    window.tsParticles = tsParticles;\n}\nexport * from \"./exports.js\";\nexport * from \"./export-types.js\";\nexport { tsParticles };\n", "const defaultInset = 2, origin = { x: 0, y: 0 };\nexport function drawStar(data) {\n    const { context, particle, radius } = data, sides = particle.sides, inset = particle.starInset ?? defaultInset;\n    context.moveTo(origin.x, origin.y - radius);\n    for (let i = 0; i < sides; i++) {\n        context.rotate(Math.PI / sides);\n        context.lineTo(origin.x, origin.y - radius * inset);\n        context.rotate(Math.PI / sides);\n        context.lineTo(origin.x, origin.y - radius);\n    }\n}\n", "import { getRangeValue, } from \"@tsparticles/engine\";\nimport { drawStar } from \"./Utils.js\";\nconst defaultInset = 2, defaultSides = 5;\nexport class StarDrawer {\n    constructor() {\n        this.validTypes = [\"star\"];\n    }\n    draw(data) {\n        drawStar(data);\n    }\n    getSidesCount(particle) {\n        const star = particle.shapeData;\n        return Math.round(getRangeValue(star?.sides ?? defaultSides));\n    }\n    particleInit(container, particle) {\n        const star = particle.shapeData;\n        particle.starInset = getRangeValue(star?.inset ?? defaultInset);\n    }\n}\n", "import { StarDrawer } from \"./StarDrawer.js\";\nexport async function loadStarShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new StarDrawer(), refresh);\n}\n", "// const { tsParticles } = require(\"@tsparticles/engine\");\n// const { loadStarShape } = require(\"@tsparticles/shape-star\");\n\nimport { tsParticles } from \"@tsparticles/engine\";\nimport { loadStarShape } from \"@tsparticles/shape-star\";\n\nvar button = document.querySelector(\".confetti-btn-ts\")\nbutton.addEventListener(\"click\", function () {\n  (async () => {\n    console.log(\"Function Executed11\",tsParticles);\n    await loadStarShape(tsParticles);\n  })();\n\n  // const defaults = {\n  //   spread: 360,\n  //   ticks: 50,\n  //   gravity: 0,\n  //   decay: 0.94,\n  //   startVelocity: 30,\n  //   shapes: [\"star\"],\n  //   colors: [\"FFE400\", \"FFBD00\", \"E89400\", \"FFCA6C\", \"FDFFB8\"],\n  // };\n  \n  // function shoot() {\n  //   confetti({\n  //     ...defaults,\n  //     particleCount: 40,\n  //     scalar: 1.2,\n  //     shapes: [\"star\"],\n  //   });\n  \n  //   confetti({\n  //     ...defaults,\n  //     particleCount: 10,\n  //     scalar: 0.75,\n  //     shapes: [\"circle\"],\n  //   });\n  // }\n  \n  // setTimeout(shoot, 0);\n  // setTimeout(shoot, 100);\n  // setTimeout(shoot, 200);\n\n\n  console.log(\"Function Executed\");\n\n})\n\nconsole.log(\"Bundle File Excessed\")\n\n"],
  "mappings": "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",
  "names": ["MoveDirection", "squareExp", "AnimationMode", "AnimationStatus", "DestroyType", "OutModeDirection", "PixelMode", "StartValueType", "decayOffset", "AlterType", "_a", "InteractivityDetect", "container", "theme", "EventType", "DivType", "ResponsiveMode", "ThemeMode", "CollisionMode", "OutMode", "LimitMode", "InteractorType", "ParticleOutType", "container", "RangeType", "capacity", "manualCount", "container", "deleteCount", "RotateDirection", "GradientType", "EasingType", "defaultInset"]
}
